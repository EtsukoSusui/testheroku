{"version":3,"sources":["config/constants/tokens.ts","hooks/useApprove.ts","state/teams/index.tsx","config/constants/nfts.ts","utils/makeBatchRequest.ts","config/constants/types.ts","config/constants/endpoints.ts","components/UnlockButton.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useRefresh.ts","hooks/useAuth.ts","components/Tags.tsx","utils/getRpcUrl.ts","utils/wallet.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","utils/bscscan.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/collectibles.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useStake.ts","config/constants/ifo.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/block/index.ts","state/collectibles/index.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","hooks/usePersistState.ts","utils/formatBalance.ts","utils/bigNumber.ts","utils/achievements.ts","utils/latinise.ts","state/predictions/index.ts","hooks/useLastUpdated.ts","state/hooks.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","config/index.ts","utils/apr.ts","components/Select/Select.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","routerHistory.ts","components/Balance.tsx","utils/settings.ts","utils/contractHelpers.ts","utils/farmHelpers.ts","components/layout/Flex.tsx","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","hooks/useContract.ts","views/Pools/helpers.tsx","state/index.ts","hooks/useWeb3.ts","utils/multicall.ts","utils/web3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","config/constants/pools.ts","hooks/useToast.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useTheme.ts","config/constants/farms.ts","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","utils/compoundApyHelpers.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx"],"names":["tokens","bnb","symbol","projectLink","cake","address","56","97","decimals","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","useApprove","lpContract","account","useWeb3React","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","useSousApprove","sousId","earningTokenSymbol","useState","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","t","useTranslation","dispatch","useAppDispatch","sousChefContract","useSousChef","handleApprove","updateUserAllowance","console","error","message","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","methods","options","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","useEffect","allowance","call","response","currentAllowance","BigNumber","gt","checkApprovalStatus","useLotteryApprove","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","initialState","isInitialized","isLoading","data","teamsList","reduce","accum","team","id","teamsSlice","createSlice","name","reducers","fetchStart","state","fetchFailed","teamFetchSucceeded","action","payload","teamsFetchSucceeded","actions","fetchTeam","teamId","getTeam","fetchTeams","getTeams","teams","IPFS_GATEWAY","nftSources","NftType","PANCAKE","identifierKey","MIXIE","Nfts","description","images","lg","md","sm","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","map","Promise","resolve","reject","add","request","err","result","execute","all","PoolIds","PoolCategory","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTION","ARCHIVED_NODE","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","priceHelperLps","pid","lpSymbol","lpAddresses","token","quoteToken","fetchFarm","farm","lpAddress","getAddress","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsConfig","userData","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","setLoadArchivedFarmsData","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","profileClear","getItem","walletconnect","close","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","tokenAddress","tokenImage","image","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","alt","background","textColor","users","points","profileContract","getProfileContract","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","i","push","teamData","onChainTeamData","Number","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","toNumber","campaigns","title","badge","campaignMap","Map","campaign","set","getBscScanAddressUrl","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","children","getIdentifierKeyFromAddress","nftAddress","nftSource","Object","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","fetch","uriDataResponse","ok","json","uriData","getNftByTokenId","nft","LS_KEY","fetchLocale","locale","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","useSousStake","isUsingBnb","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","MAINNET_CHAIN_ID","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","pending","association","Grid","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","ml","num","getRoi","amountEarned","amountInvested","toFixed","style","maxWidth","justifyContent","textAlign","freq","mt","fee","href","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","BIG_NINE","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","usePollFarmsData","includeArchive","web3","farmToFetch","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","cakeBnbFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","DropDownHeader","shadows","inset","colors","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","onChange","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","ref","label","option","selectedIndex","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","createBrowserHistory","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","amountInGwei","_web3","web3NoAccount","Contract","getBep20Contract","bep20Abi","erc721Abi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","gradients","bubblegum","Inner","PageHeader","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","useIfoV1Contract","useWeb3","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","library","refEth","Web3","setweb3","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","multicallv2","tryAggregate","requireSuccess","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","getWeb3WithArchivedNodeProvider","archivedHttpProvider","enterStaking","gas","deposit","leaveStaking","withdraw","emergencyWithdraw","Token","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","getPricePerFullShare","calculateHarvestCakeRewards","calculateTotalPendingCakeRewards","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","withdrawFee","withdrawFeePeriod","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","CORE","COMMUNITY","toastContext","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","code","languageList","useTheme","StyledThemeContext","isCommunity","ViewMode","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","icon","items","Menu","currentLang","langs","setLang","links","username","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","AprRow","tooltipContent","useTooltip","placement","targetRef","tooltipVisible","earningsPercentageToDisplay","apyModalLink","useModal","onPresentApyModal","alignItems","scale","PromotedGradient","keyframes","StyledCard","Card","isPromoted","primaryBright","secondary","card","isDesktop","StyledCardInner","radii","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","flexDirection","small","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","src","ApprovalAction","stakingTokenContract","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","StyledButton","Button","PercentageButton","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","minWidth","onUserInput","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","text","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","Divider","BountyModal","cakeBountyToDisplay","dollarBountyToDisplay","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","tooltipPadding","right","BountyCard","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","fontWeight","onPresentBountyModal","ButtonText","xs","HelpButton","px","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","iconFile","showStakedTag","subtitle","showSubtitle","role","HelpIconWrapper","EarningsCell","labelText","asset","event","stopPropagation","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","displayBalance","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","transformProfileResponse","profileResponse","userId","getUsername","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints"],"mappings":"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","file":"static/js/main.1607a809.chunk.js","sourcesContent":["const tokens = {\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  cake: {\r\n    symbol: 'CAKE',\r\n    address: {\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  txl: {\r\n    symbol: 'TXL',\r\n    address: {\r\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tixl.org/',\r\n  },\r\n  cos: {\r\n    symbol: 'COS',\r\n    address: {\r\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.contentos.io/',\r\n  },\r\n  bunny: {\r\n    symbol: 'BUNNY',\r\n    address: {\r\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakebunny.finance/',\r\n  },\r\n  alice: {\r\n    symbol: 'ALICE',\r\n    address: {\r\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.myneighboralice.com/',\r\n  },\r\n  for: {\r\n    symbol: 'FOR',\r\n    address: {\r\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.for.tube/home',\r\n  },\r\n  bux: {\r\n    symbol: 'BUX',\r\n    address: {\r\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://getbux.com/bux-crypto/',\r\n  },\r\n  nuls: {\r\n    symbol: 'NULS',\r\n    address: {\r\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://www.nuls.io/',\r\n  },\r\n  belt: {\r\n    symbol: 'BELT',\r\n    address: {\r\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beta.belt.fi/',\r\n  },\r\n  ramp: {\r\n    symbol: 'RAMP',\r\n    address: {\r\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://rampdefi.com/',\r\n  },\r\n  bfi: {\r\n    symbol: 'BFI',\r\n    address: {\r\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bearn.fi/',\r\n  },\r\n  dexe: {\r\n    symbol: 'DEXE',\r\n    address: {\r\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dexe.network/',\r\n  },\r\n  bel: {\r\n    symbol: 'BEL',\r\n    address: {\r\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bella.fi/',\r\n  },\r\n  tpt: {\r\n    symbol: 'TPT',\r\n    address: {\r\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\r\n      97: '',\r\n    },\r\n    decimals: 4,\r\n    projectLink: 'https://www.tokenpocket.pro/',\r\n  },\r\n  watch: {\r\n    symbol: 'WATCH',\r\n    address: {\r\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yieldwatch.net/',\r\n  },\r\n  xmark: {\r\n    symbol: 'xMARK',\r\n    address: {\r\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://benchmarkprotocol.finance/',\r\n  },\r\n  bmxx: {\r\n    symbol: 'bMXX',\r\n    address: {\r\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://multiplier.finance/',\r\n  },\r\n  iotx: {\r\n    symbol: 'IOTX',\r\n    address: {\r\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://iotex.io/',\r\n  },\r\n  bor: {\r\n    symbol: 'BOR',\r\n    address: {\r\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.boringdao.com/',\r\n  },\r\n  bopen: {\r\n    symbol: 'bOPEN',\r\n    address: {\r\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://opendao.io/',\r\n  },\r\n  dodo: {\r\n    symbol: 'DODO',\r\n    address: {\r\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dodoex.io/',\r\n  },\r\n  swingby: {\r\n    symbol: 'SWINGBY',\r\n    address: {\r\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swingby.network/',\r\n  },\r\n  bry: {\r\n    symbol: 'BRY',\r\n    address: {\r\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://berrydata.co/',\r\n  },\r\n  zee: {\r\n    symbol: 'ZEE',\r\n    address: {\r\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://zeroswap.io/',\r\n  },\r\n  swgb: {\r\n    symbol: 'SWGb',\r\n    address: {\r\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swirgepay.com/',\r\n  },\r\n  swg: {\r\n    symbol: 'SWG',\r\n    address: {\r\n      56: '0xe792f64c582698b8572aaf765bdc426ac3aefb6b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swirgepay.com/',\r\n  },\r\n  sfp: {\r\n    symbol: 'SFP',\r\n    address: {\r\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.safepal.io/',\r\n  },\r\n  lina: {\r\n    symbol: 'LINA',\r\n    address: {\r\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://linear.finance/',\r\n  },\r\n  lit: {\r\n    symbol: 'LIT',\r\n    address: {\r\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.litentry.com/',\r\n  },\r\n  hget: {\r\n    symbol: 'HGET',\r\n    address: {\r\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.hedget.com/',\r\n  },\r\n  bdo: {\r\n    symbol: 'BDO',\r\n    address: {\r\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bdollar.fi/',\r\n  },\r\n  egld: {\r\n    symbol: 'EGLD',\r\n    address: {\r\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://elrond.com/',\r\n  },\r\n  ust: {\r\n    symbol: 'UST',\r\n    address: {\r\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  wsote: {\r\n    symbol: 'wSOTE',\r\n    address: {\r\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://soteria.finance/#/',\r\n  },\r\n  front: {\r\n    symbol: 'FRONT',\r\n    address: {\r\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://frontier.xyz/',\r\n  },\r\n  helmet: {\r\n    symbol: 'Helmet',\r\n    address: {\r\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.helmet.insure/',\r\n  },\r\n  btcst: {\r\n    symbol: 'BTCST',\r\n    address: {\r\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\r\n      97: '',\r\n    },\r\n    decimals: 17,\r\n    projectLink: 'https://www.1-b.tc/',\r\n  },\r\n  bscx: {\r\n    symbol: 'BSCX',\r\n    address: {\r\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bscex.org/',\r\n  },\r\n  ten: {\r\n    symbol: 'TEN',\r\n    address: {\r\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tenet.farm/',\r\n  },\r\n  balbt: {\r\n    symbol: 'bALBT',\r\n    address: {\r\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://allianceblock.io/',\r\n  },\r\n  asr: {\r\n    symbol: 'ASR',\r\n    address: {\r\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  atm: {\r\n    symbol: 'ATM',\r\n    address: {\r\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  og: {\r\n    symbol: 'OG',\r\n    address: {\r\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  reef: {\r\n    symbol: 'REEF',\r\n    address: {\r\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://reef.finance/',\r\n  },\r\n  ditto: {\r\n    symbol: 'DITTO',\r\n    address: {\r\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://ditto.money/',\r\n  },\r\n  juv: {\r\n    symbol: 'JUV',\r\n    address: {\r\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  psg: {\r\n    symbol: 'PSG',\r\n    address: {\r\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\r\n      97: '',\r\n    },\r\n    decimals: 2,\r\n    projectLink: 'https://www.chiliz.com',\r\n  },\r\n  vai: {\r\n    symbol: 'VAI',\r\n    address: {\r\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  blink: {\r\n    symbol: 'BLINK',\r\n    address: {\r\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://blink.wink.org',\r\n  },\r\n  unfi: {\r\n    symbol: 'UNFI',\r\n    address: {\r\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unifiprotocol.com',\r\n  },\r\n  twt: {\r\n    symbol: 'TWT',\r\n    address: {\r\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://trustwallet.com/',\r\n  },\r\n  hard: {\r\n    symbol: 'HARD',\r\n    address: {\r\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://hard.kava.io',\r\n  },\r\n  broobee: {\r\n    symbol: 'bROOBEE',\r\n    address: {\r\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://roobee.io/',\r\n  },\r\n  stax: {\r\n    symbol: 'STAX',\r\n    address: {\r\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://stablexswap.com/',\r\n  },\r\n  nar: {\r\n    symbol: 'NAR',\r\n    address: {\r\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://narwhalswap.org/',\r\n  },\r\n  nya: {\r\n    symbol: 'NYA',\r\n    address: {\r\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://nyanswop.org/',\r\n  },\r\n  ctk: {\r\n    symbol: 'CTK',\r\n    address: {\r\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://www.certik.foundation/',\r\n  },\r\n  inj: {\r\n    symbol: 'INJ',\r\n    address: {\r\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://injectiveprotocol.com/',\r\n  },\r\n  sxp: {\r\n    symbol: 'SXP',\r\n    address: {\r\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://swipe.io/',\r\n  },\r\n  alpha: {\r\n    symbol: 'ALPHA',\r\n    address: {\r\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://alphafinance.io/',\r\n  },\r\n  xvs: {\r\n    symbol: 'XVS',\r\n    address: {\r\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  sushi: {\r\n    symbol: 'SUSHI',\r\n    address: {\r\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://sushi.com/',\r\n  },\r\n  comp: {\r\n    symbol: 'COMP',\r\n    address: {\r\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://compound.finance/',\r\n  },\r\n  syrup: {\r\n    symbol: 'SYRUP',\r\n    address: {\r\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  bifi: {\r\n    symbol: 'BIFI',\r\n    address: {\r\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://beefy.finance/',\r\n  },\r\n  dusk: {\r\n    symbol: 'DUSK',\r\n    address: {\r\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dusk.network/',\r\n  },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n  eth: {\r\n    symbol: 'ETH',\r\n    address: {\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/',\r\n  },\r\n  beth: {\r\n    symbol: 'BETH',\r\n    address: {\r\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\r\n  },\r\n  mamzn: {\r\n    symbol: 'mAMZN',\r\n    address: {\r\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mgoogl: {\r\n    symbol: 'mGOOGL',\r\n    address: {\r\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mnflx: {\r\n    symbol: 'mNFLX',\r\n    address: {\r\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  mtsla: {\r\n    symbol: 'mTSLA',\r\n    address: {\r\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  ltc: {\r\n    symbol: 'LTC',\r\n    address: {\r\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://litecoin.org/',\r\n  },\r\n  usdc: {\r\n    symbol: 'USDC',\r\n    address: {\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.centre.io/usdc',\r\n  },\r\n  dai: {\r\n    symbol: 'DAI',\r\n    address: {\r\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://www.makerdao.com/',\r\n  },\r\n  ada: {\r\n    symbol: 'ADA',\r\n    address: {\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.cardano.org/',\r\n  },\r\n  band: {\r\n    symbol: 'BAND',\r\n    address: {\r\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bandprotocol.com/',\r\n  },\r\n  dot: {\r\n    symbol: 'DOT',\r\n    address: {\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkadot.network/',\r\n  },\r\n  eos: {\r\n    symbol: 'EOS',\r\n    address: {\r\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://eos.io/',\r\n  },\r\n  link: {\r\n    symbol: 'LINK',\r\n    address: {\r\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chain.link/',\r\n  },\r\n  usdt: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.to/',\r\n  },\r\n  btcb: {\r\n    symbol: 'BTCB',\r\n    address: {\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bitcoin.org/',\r\n  },\r\n  xrp: {\r\n    symbol: 'XRP',\r\n    address: {\r\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ripple.com/xrp/',\r\n  },\r\n  atom: {\r\n    symbol: 'ATOM',\r\n    address: {\r\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://cosmos.network/',\r\n  },\r\n  yfii: {\r\n    symbol: 'YFII',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dfi.money/#/',\r\n  },\r\n  xtz: {\r\n    symbol: 'XTZ',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tezos.com/',\r\n  },\r\n  bch: {\r\n    symbol: 'BCH',\r\n    address: {\r\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'http://bch.info/',\r\n  },\r\n  yfi: {\r\n    symbol: 'YFI',\r\n    address: {\r\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://yearn.finance/',\r\n  },\r\n  uni: {\r\n    symbol: 'UNI',\r\n    address: {\r\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://uniswap.org/',\r\n  },\r\n  fil: {\r\n    symbol: 'FIL',\r\n    address: {\r\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://filecoin.io/',\r\n  },\r\n  bake: {\r\n    symbol: 'BAKE',\r\n    address: {\r\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bakeryswap.org/',\r\n  },\r\n  burger: {\r\n    symbol: 'BURGER',\r\n    address: {\r\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://burgerswap.org/',\r\n  },\r\n  bdigg: {\r\n    symbol: 'bDIGG',\r\n    address: {\r\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  bbadger: {\r\n    symbol: 'bBadger',\r\n    address: {\r\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://badger.finance/',\r\n  },\r\n  trade: {\r\n    symbol: 'TRADE',\r\n    address: {\r\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unitrade.app/',\r\n  },\r\n  pnt: {\r\n    symbol: 'PNT',\r\n    address: {\r\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ptokens.io/',\r\n  },\r\n  mir: {\r\n    symbol: 'MIR',\r\n    address: {\r\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  pbtc: {\r\n    symbol: 'pBTC',\r\n    address: {\r\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ptokens.io/',\r\n  },\r\n  lto: {\r\n    symbol: 'LTO',\r\n    address: {\r\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ltonetwork.com/',\r\n  },\r\n  pcws: {\r\n    symbol: 'pCWS',\r\n    address: {\r\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://game.seascape.network/',\r\n  },\r\n  zil: {\r\n    symbol: 'ZIL',\r\n    address: {\r\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\r\n      97: '',\r\n    },\r\n    decimals: 12,\r\n    projectLink: 'https://www.zilliqa.com/',\r\n  },\r\n  lien: {\r\n    symbol: 'LIEN',\r\n    address: {\r\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://lien.finance/',\r\n  },\r\n  swth: {\r\n    symbol: 'SWTH',\r\n    address: {\r\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://switcheo.network/',\r\n  },\r\n  dft: {\r\n    symbol: 'DFT',\r\n    address: {\r\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.dfuture.com/home',\r\n  },\r\n  gum: {\r\n    symbol: 'GUM',\r\n    address: {\r\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://gourmetgalaxy.io/',\r\n  },\r\n  dego: {\r\n    symbol: 'DEGO',\r\n    address: {\r\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bsc.dego.finance/home',\r\n  },\r\n  nrv: {\r\n    symbol: 'NRV',\r\n    address: {\r\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://nerve.fi/',\r\n  },\r\n  easy: {\r\n    symbol: 'EASY',\r\n    address: {\r\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://easyfi.network/',\r\n  },\r\n  oddz: {\r\n    symbol: 'ODDZ',\r\n    address: {\r\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://oddz.fi/',\r\n  },\r\n  hoo: {\r\n    symbol: 'HOO',\r\n    address: {\r\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://hoo.com/',\r\n  },\r\n  apys: {\r\n    symbol: 'APYS',\r\n    address: {\r\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://apyswap.com/',\r\n  },\r\n  bondly: {\r\n    symbol: 'BONDLY',\r\n    address: {\r\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bondly.finance/',\r\n  },\r\n  tko: {\r\n    symbol: 'TKO',\r\n    address: {\r\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.tokocrypto.com/',\r\n  },\r\n  itam: {\r\n    symbol: 'ITAM',\r\n    address: {\r\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://itam.network/',\r\n  },\r\n  arpa: {\r\n    symbol: 'ARPA',\r\n    address: {\r\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://arpachain.io/',\r\n  },\r\n  eps: {\r\n    symbol: 'EPS',\r\n    address: {\r\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ellipsis.finance/',\r\n  },\r\n  jgn: {\r\n    symbol: 'JGN',\r\n    address: {\r\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://jgndefi.com/',\r\n  },\r\n  tlm: {\r\n    symbol: 'TLM',\r\n    address: {\r\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\r\n      97: '',\r\n    },\r\n    decimals: 4,\r\n    projectLink: 'https://alienworlds.io/',\r\n  },\r\n  perl: {\r\n    symbol: 'PERL',\r\n    address: {\r\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://perlinx.finance/',\r\n  },\r\n  alpa: {\r\n    symbol: 'ALPA',\r\n    address: {\r\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://bsc.alpaca.city/',\r\n  },\r\n  hzn: {\r\n    symbol: 'HZN',\r\n    address: {\r\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://horizonprotocol.com/',\r\n  },\r\n  suter: {\r\n    symbol: 'SUTER',\r\n    address: {\r\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://shield.suterusu.io/',\r\n  },\r\n  cgg: {\r\n    symbol: 'CGG',\r\n    address: {\r\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chainguardians.io/',\r\n  },\r\n  mix: {\r\n    symbol: 'MIX',\r\n    address: {\r\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mixie.chainguardians.io/',\r\n  },\r\n  hakka: {\r\n    symbol: 'HAKKA',\r\n    address: {\r\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://hakka.finance/',\r\n  },\r\n  xed: {\r\n    symbol: 'XED',\r\n    address: {\r\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.exeedme.com/',\r\n  },\r\n  τbtc: {\r\n    symbol: 'τBTC',\r\n    address: {\r\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\r\n      97: '',\r\n    },\r\n    decimals: 9,\r\n    projectLink: 'https://www.btcst.finance/',\r\n  },\r\n  alpaca: {\r\n    symbol: 'ALPACA',\r\n    address: {\r\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.alpacafinance.org/',\r\n  },\r\n  dfd: {\r\n    symbol: 'DFD',\r\n    address: {\r\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://dusd.finance/',\r\n  },\r\n  lmt: {\r\n    symbol: 'LMT',\r\n    address: {\r\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://lympo.io/lmt/',\r\n  },\r\n  btt: {\r\n    symbol: 'BTT',\r\n    address: {\r\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bittorrent.com/',\r\n  },\r\n  trx: {\r\n    symbol: 'TRX',\r\n    address: {\r\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tron.network/',\r\n  },\r\n  win: {\r\n    symbol: 'WIN',\r\n    address: {\r\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://winklink.org/',\r\n  },\r\n  mcoin: {\r\n    symbol: 'mCOIN',\r\n    address: {\r\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mirror.finance/',\r\n  },\r\n  math: {\r\n    symbol: 'MATH',\r\n    address: {\r\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mathwallet.org/',\r\n  },\r\n  kun: {\r\n    symbol: 'KUN',\r\n    address: {\r\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chemix.io/home',\r\n  },\r\n  qsd: {\r\n    symbol: 'QSD',\r\n    address: {\r\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://chemix.io/home',\r\n  },\r\n  hyfi: {\r\n    symbol: 'HYFI',\r\n    address: {\r\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://hyfi.pro/#/',\r\n  },\r\n  oin: {\r\n    symbol: 'OIN',\r\n    address: {\r\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://oin.finance/',\r\n  },\r\n  doge: {\r\n    symbol: 'DOGE',\r\n    address: {\r\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://dogecoin.com/',\r\n  },\r\n  fine: {\r\n    symbol: 'FINE',\r\n    address: {\r\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://refinable.com/',\r\n  },\r\n  one: {\r\n    symbol: 'ONE',\r\n    address: {\r\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bigone.com/',\r\n  },\r\n  pmon: {\r\n    symbol: 'PMON',\r\n    address: {\r\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkamon.com/',\r\n  },\r\n  hotcross: {\r\n    symbol: 'HOTCROSS',\r\n    address: {\r\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.hotcross.com/',\r\n  },\r\n  τdoge: {\r\n    symbol: 'τDOGE',\r\n    address: {\r\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://www.btcst.finance/',\r\n  },\r\n  btr: {\r\n    symbol: 'BTR',\r\n    address: {\r\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bitrue.com/',\r\n  },\r\n  ubxt: {\r\n    symbol: 'UBXT',\r\n    address: {\r\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://upbots.com/',\r\n  },\r\n  wmass: {\r\n    symbol: 'WMASS',\r\n    address: {\r\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\r\n      97: '',\r\n    },\r\n    decimals: 8,\r\n    projectLink: 'https://massnet.org/en/',\r\n  },\r\n  rfox: {\r\n    symbol: 'RFOX',\r\n    address: {\r\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.redfoxlabs.io/',\r\n  },\r\n  xend: {\r\n    symbol: 'XEND',\r\n    address: {\r\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://xend.finance/',\r\n  },\r\n  cyc: {\r\n    symbol: 'CYC',\r\n    address: {\r\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://cyclone.xyz/',\r\n  },\r\n  chr: {\r\n    symbol: 'CHR',\r\n    address: {\r\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n      97: '',\r\n    },\r\n    decimals: 6,\r\n    projectLink: 'https://chromia.com/',\r\n  },\r\n  kalm: {\r\n    symbol: 'KALM',\r\n    address: {\r\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://kalmar.io/',\r\n  },\r\n  deri: {\r\n    symbol: 'DERI',\r\n    address: {\r\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://deri.finance/#/index',\r\n  },\r\n  well: {\r\n    symbol: 'WELL',\r\n    address: {\r\n      56: '0xf07a32eb035b786898c00bb1c64d8c6f8e7a46d5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.bitwellex.com/',\r\n  },\r\n  popen: {\r\n    symbol: 'pOPEN',\r\n    address: {\r\n      56: '0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://opendao.io/',\r\n  },\r\n  ez: {\r\n    symbol: 'EZ',\r\n    address: {\r\n      56: '0x5512014efa6cd57764fa743756f7a6ce3358cc83',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://easyfi.network/',\r\n  },\r\n  vrt: {\r\n    symbol: 'VRT',\r\n    address: {\r\n      56: '0x5f84ce30dc3cf7909101c69086c50de191895883',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://venus.io/',\r\n  },\r\n  tusd: {\r\n    symbol: 'TUSD',\r\n    address: {\r\n      56: '0x14016e85a25aeb13065688cafb43044c2ef86784',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.trueusd.com/',\r\n  },\r\n  mtrg: {\r\n    symbol: 'MTRG',\r\n    address: {\r\n      56: '0xbd2949f67dcdc549c6ebe98696449fa79d988a9f',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.meter.io/',\r\n  },\r\n  ktn: {\r\n    symbol: 'KTN',\r\n    address: {\r\n      56: '0xdae6c2a48bfaa66b43815c5548b10800919c993e',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://kattana.io/',\r\n  },\r\n  qkc: {\r\n    symbol: 'QKC',\r\n    address: {\r\n      56: '0xa1434f1fc3f437fa33f7a781e041961c0205b5da',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://quarkchain.io/',\r\n  },\r\n  bcfx: {\r\n    symbol: 'bCFX',\r\n    address: {\r\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.confluxnetwork.org/',\r\n  },\r\n  mx: {\r\n    symbol: 'MX',\r\n    address: {\r\n      56: '0x9f882567a62a5560d147d64871776eea72df41d3',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.mxc.com/',\r\n  },\r\n  ata: {\r\n    symbol: 'ATA',\r\n    address: {\r\n      56: '0xa2120b9e674d3fc3875f415a7df52e382f141225',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.ata.network/',\r\n  },\r\n  mbox: {\r\n    symbol: 'MBOX',\r\n    address: {\r\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.mobox.io/#/',\r\n  },\r\n  boring: {\r\n    symbol: 'BORING',\r\n    address: {\r\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.boringdao.com/',\r\n  },\r\n  marsh: {\r\n    symbol: 'MARSH',\r\n    address: {\r\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://unmarshal.io/',\r\n  },\r\n}\r\n\r\nexport default tokens\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\r\nimport useToast from './useToast'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (tx) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), e?.message)\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve CAKE auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = () => {\r\n    cakeContract.methods\r\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setRequestedApproval(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\r\n        setLastUpdated()\r\n        setRequestedApproval(false)\r\n      })\r\n      .on('error', (error) => {\r\n        console.error(error)\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      })\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\r\n    return tx\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { Nft, NftSource, NftType } from './types'\r\n\r\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\r\n\r\nexport const nftSources: NftSource = {\r\n  [NftType.PANCAKE]: {\r\n    address: {\r\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n  [NftType.MIXIE]: {\r\n    address: {\r\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\r\n      97: '',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n}\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Mixie v1',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-1-lg.png',\r\n      md: 'mixie-1-md.png',\r\n      sm: 'mixie-1-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '001-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Mixie v2',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-2-lg.png',\r\n      md: 'mixie-2-md.png',\r\n      sm: 'mixie-2-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '002-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Mixie v3',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-3-lg.png',\r\n      md: 'mixie-3-md.png',\r\n      sm: 'mixie-3-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '003-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Easter ‘21 Champions',\r\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\r\n    images: {\r\n      lg: 'easter-champion-storm-lg.png',\r\n      md: 'easter-champion-storm-md.png',\r\n      sm: 'easter-champion-storm-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-champion-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Cakeston Easter '21\",\r\n    description: 'Melting Easter eggs and melting hearts!',\r\n    images: {\r\n      lg: 'cakeston-easter-21-lg.png',\r\n      md: 'cakeston-easter-21-md.png',\r\n      sm: 'cakeston-easter-21-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-caker',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Flipsie Easter '21\",\r\n    description: 'Watch out for Flipsie’s spatula smash!',\r\n    images: {\r\n      lg: 'flipsie-easter-21-lg.png',\r\n      md: 'flipsie-easter-21-md.png',\r\n      sm: 'flipsie-easter-21-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-flipper',\r\n    type: NftType.PANCAKE,\r\n    variationId: 14,\r\n  },\r\n  {\r\n    name: \"Stormy Easter '21\",\r\n    description: 'Do you like chocolate with your syrup? Go long!',\r\n    images: {\r\n      lg: 'stormy-easter-21-lg.png',\r\n      md: 'stormy-easter-21-md.png',\r\n      sm: 'stormy-easter-21-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 12,\r\n  },\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'bullish',\r\n    type: NftType.PANCAKE,\r\n    variationId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'hiccup',\r\n    type: NftType.PANCAKE,\r\n    variationId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sleepy',\r\n    type: NftType.PANCAKE,\r\n    variationId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sunny',\r\n    type: NftType.PANCAKE,\r\n    variationId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'churro',\r\n    type: NftType.PANCAKE,\r\n    variationId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'dollop',\r\n    type: NftType.PANCAKE,\r\n    variationId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'twinkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'swapsies',\r\n    type: NftType.PANCAKE,\r\n    variationId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'drizzle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'blueberries',\r\n    type: NftType.PANCAKE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'circular',\r\n    type: NftType.PANCAKE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sparkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import { getWeb3NoAccount } from './web3'\r\n\r\n/**\r\n * Accepts an array of contract method calls and batches them\r\n *\r\n * Example:\r\n *\r\n * [\r\n *  contract.method.balanceOf().call,\r\n *  contract.method.startBlockNumber().call\r\n * ]\r\n */\r\nconst makeBatchRequest = (calls: any[]) => {\r\n  try {\r\n    const web3 = getWeb3NoAccount()\r\n    const batch = new web3.BatchRequest()\r\n\r\n    const promises = calls.map((call) => {\r\n      return new Promise((resolve, reject) => {\r\n        batch.add(\r\n          call.request({}, (err, result) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              resolve(result)\r\n            }\r\n          }),\r\n        )\r\n      })\r\n    })\r\n\r\n    batch.execute()\r\n\r\n    return Promise.all(promises)\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default makeBatchRequest\r\n","import { TranslatableText } from 'state/types'\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n  busdPrice?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  token: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type NftSource = {\r\n  [key in NftType]: {\r\n    address: Address\r\n    identifierKey: string\r\n  }\r\n}\r\n\r\nexport enum NftType {\r\n  PANCAKE = 'pancake',\r\n  MIXIE = 'mixie',\r\n}\r\n\r\nexport type Nft = {\r\n  description: string\r\n  name: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  type: NftType\r\n  video?: NftVideo\r\n\r\n  // Uniquely identifies the nft.\r\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\r\n  identifier: string\r\n\r\n  // Used to be \"bunnyId\". Used when minting NFT\r\n  variationId?: number | string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst UnlockButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst priceHelperLps: FarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n  {\r\n    pid: null,\r\n    lpSymbol: 'QSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\r\n    },\r\n    token: tokens.qsd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport { Farm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountMc: SerializedBigNumber\r\n  quoteTokenAmountMc: SerializedBigNumber\r\n  tokenAmountTotal: SerializedBigNumber\r\n  quoteTokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n}\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\r\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'poolInfo',\r\n            params: [pid],\r\n          },\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'totalAllocPoint',\r\n          },\r\n        ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n\r\n  return {\r\n    tokenAmountMc: tokenAmountMc.toJSON(),\r\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { Farm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { FarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      return farm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { Farm } from 'state/types'\r\n\r\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms) => {\r\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\r\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\r\n    return { ...farm, token, quoteToken }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { FarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingCake',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n}))\r\n\r\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst BinanceTag: React.FC<TagProps> = (props) => {\r\n  return (\r\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      Binance\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n","export { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { TeamsById, TeamResponse } from 'state/types'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const {\r\n      0: teamName,\r\n      2: numberUsers,\r\n      3: numberPoints,\r\n      4: isJoinable,\r\n    } = await profileContract.methods.getTeamProfile(teamId).call()\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers,\r\n      points: numberPoints,\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.methods.numberTeams().call()\r\n    const calls = []\r\n\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push(profileContract.methods.getTeamProfile(i).call)\r\n    }\r\n\r\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: Number(numberUsers),\r\n          points: Number(numberPoints),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { Farm, Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | Pool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: Pool): Pool => {\r\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  } as Pool\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\r\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { BASE_BSC_SCAN_URL } from 'config'\r\n\r\nexport const getBscScanAddressUrl = (address: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\r\n}\r\n\r\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\r\n}\r\n\r\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\r\n}\r\n\r\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\r\n}\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'PancakeSwap',\r\n  description:\r\n    'The most popular AMM on BSC by user count! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by PancakeSwap), NFTs, and more, on a platform you can trust.',\r\n  image: 'https://pancakeswap.finance/images/hero.png',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  switch (path) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst PageMeta = () => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\r\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })}`\r\n    : ''\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\r\nimport { Nft, NftType } from 'config/constants/types'\r\nimport { getAddress } from './addressHelpers'\r\nimport { getErc721Contract } from './contractHelpers'\r\n\r\n/**\r\n * Gets the identifier key based on the nft address\r\n * Helpful for looking up the key when all you have is the address\r\n */\r\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\r\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\r\n    const address = getAddress(nftSourceEntry.address)\r\n    return address === nftAddress\r\n  })\r\n\r\n  return nftSource ? nftSource.identifierKey : null\r\n}\r\n\r\n/**\r\n * Some sources like Pancake do not return HTTP tokenURI's\r\n */\r\nexport const getTokenUrl = (tokenUri: string) => {\r\n  if (tokenUri.startsWith('ipfs://')) {\r\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\r\n  }\r\n\r\n  return tokenUri\r\n}\r\n\r\nexport const getAddressByType = (type: NftType) => {\r\n  return getAddress(nftSources[type].address)\r\n}\r\n\r\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\r\n  try {\r\n    const contract = getErc721Contract(nftAddress)\r\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\r\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\r\n\r\n    if (!uriDataResponse.ok) {\r\n      return null\r\n    }\r\n\r\n    const uriData = await uriDataResponse.json()\r\n    return uriData\r\n  } catch (error) {\r\n    console.error('getTokenUriData', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\r\n  const uriData = await getTokenUriData(nftAddress, tokenId)\r\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\r\n\r\n  // Bail out early if we have no uriData, identifierKey, or the value does not\r\n  // exist in the object\r\n  if (!uriData) {\r\n    return null\r\n  }\r\n\r\n  if (!identifierKey) {\r\n    return null\r\n  }\r\n\r\n  if (!uriData[identifierKey]) {\r\n    return null\r\n  }\r\n\r\n  return Nfts.find((nft) => {\r\n    return uriData[identifierKey].includes(nft.identifier)\r\n  })\r\n}\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      console.info(txHash)\r\n    },\r\n    [account, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import tokens from './tokens'\r\nimport farms from './farms'\r\nimport { Ifo, Token } from './types'\r\n\r\nconst cakeBnbLpToken: Token = {\r\n  symbol: farms[1].lpSymbol,\r\n  address: farms[1].lpAddresses,\r\n  decimals: 18,\r\n}\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'kalmar',\r\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\r\n    isActive: true,\r\n    name: 'Kalmar (KALM)',\r\n    poolBasic: {\r\n      saleAmount: '375,000 KALM',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '875,000 KALM',\r\n      raiseAmount: '$2,500,000',\r\n      cakeToBurn: '$1,250,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.kalm,\r\n    releaseBlockNumber: 7707736,\r\n    campaignId: '511110000',\r\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\r\n    tokenOfferingPrice: 2.0,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'hotcross',\r\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\r\n    isActive: false,\r\n    name: 'Hot Cross (HOTCROSS)',\r\n    poolBasic: {\r\n      saleAmount: '15,000,000 HOTCROSS',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '35,000,000 HOTCROSS',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hotcross,\r\n    releaseBlockNumber: 7477900,\r\n    campaignId: '511100000',\r\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\r\n    tokenOfferingPrice: 0.05,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'horizon',\r\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\r\n    isActive: false,\r\n    name: 'Horizon Protocol (HZN)',\r\n    poolBasic: {\r\n      saleAmount: '3,000,000 HZN',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '7,000,000 HZN',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hzn,\r\n    releaseBlockNumber: 6581111,\r\n    campaignId: '511090000',\r\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\r\n    tokenOfferingPrice: 0.25,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'belt',\r\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n    isActive: false,\r\n    name: 'Belt (BELT)',\r\n    poolUnlimited: {\r\n      saleAmount: '150,000 BELT',\r\n      raiseAmount: '$3,000,000',\r\n      cakeToBurn: '$1,500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.belt,\r\n    releaseBlockNumber: 5493919,\r\n    campaignId: '511080000',\r\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'watch',\r\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n    isActive: false,\r\n    name: 'Yieldwatch (WATCH)',\r\n    poolUnlimited: {\r\n      saleAmount: '8,000,000 WATCH',\r\n      raiseAmount: '$800,000',\r\n      cakeToBurn: '$400,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.watch,\r\n    releaseBlockNumber: 5294924,\r\n    campaignId: '511070000',\r\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'berry',\r\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n    isActive: false,\r\n    name: 'Berry (BRY)',\r\n    poolUnlimited: {\r\n      saleAmount: '2,000,000 BRY',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.bry,\r\n    releaseBlockNumber: 4750968,\r\n    campaignId: '511060000',\r\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'soteria',\r\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n    isActive: false,\r\n    name: 'Soteria (wSOTE)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,500,000 wSOTE',\r\n      raiseAmount: '$525,000',\r\n      cakeToBurn: '$262,500',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.wsote,\r\n    releaseBlockNumber: 4086064,\r\n    campaignId: '511050000',\r\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'helmet',\r\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n    isActive: false,\r\n    name: 'Helmet.insure (Helmet)',\r\n    poolUnlimited: {\r\n      saleAmount: '10,000,000 Helmet',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.helmet,\r\n    releaseBlockNumber: 3771926,\r\n    campaignId: '511040000',\r\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'tenet',\r\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n    isActive: false,\r\n    name: 'Tenet (TEN)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,000,000 TEN',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ten,\r\n    releaseBlockNumber: 3483883,\r\n    campaignId: '511030000',\r\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'ditto',\r\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n    isActive: false,\r\n    name: 'Ditto (DITTO)',\r\n    poolUnlimited: {\r\n      saleAmount: '700,000 DITTO',\r\n      raiseAmount: '$630,000',\r\n      cakeToBurn: '$315,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ditto,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511020000',\r\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'blink',\r\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n    isActive: false,\r\n    name: 'BLINk (BLK)',\r\n    poolUnlimited: {\r\n      saleAmount: '100,000,000 BLINK',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.blink,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511010000',\r\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","export default {\r\n  masterChef: {\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n  },\r\n  sousChef: {\r\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n  },\r\n  lottery: {\r\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\r\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\r\n  },\r\n  lotteryNFT: {\r\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\r\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\r\n  },\r\n  lotteryV2: {\r\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\r\n    56: '',\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '',\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n  },\r\n  tradingCompetition: {\r\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\r\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\r\n  },\r\n  easterNft: {\r\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\r\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\r\n  },\r\n  cakeVault: {\r\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\r\n    97: '',\r\n  },\r\n  predictions: {\r\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\r\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\r\n  },\r\n  chainlinkOracle: {\r\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\r\n    97: '',\r\n  },\r\n}\r\n","import { MAINNET_CHAIN_ID } from 'config'\r\nimport addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.cake.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return getAddress(addresses.lottery)\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return getAddress(addresses.lotteryNFT)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { CollectiblesState } from 'state/types'\r\nimport { nftSources } from 'config/constants/nfts'\r\nimport { NftType } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\n\r\nconst initialState: CollectiblesState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: {},\r\n}\r\n\r\ntype NftSourceItem = [number, string]\r\n\r\n// Thunks\r\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\r\n  'collectibles/fetchWalletNfts',\r\n  async (account) => {\r\n    // For each nft source get nft data\r\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\r\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\r\n      const address = getAddress(addressObj)\r\n      const contract = getErc721Contract(address)\r\n\r\n      const getTokenIdAndData = async (index: number) => {\r\n        try {\r\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\r\n          const walletNft = await getNftByTokenId(address, tokenId)\r\n          return [Number(tokenId), walletNft.identifier]\r\n        } catch (error) {\r\n          console.error('getTokenIdAndData', error)\r\n          return null\r\n        }\r\n      }\r\n\r\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\r\n      const balanceOf = Number(balanceOfResponse)\r\n\r\n      if (balanceOf === 0) {\r\n        return []\r\n      }\r\n\r\n      const nftDataFetchPromises = []\r\n\r\n      // For each index get the tokenId and data associated with it\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        nftDataFetchPromises.push(getTokenIdAndData(i))\r\n      }\r\n\r\n      const nftData = await Promise.all(nftDataFetchPromises)\r\n      return nftData\r\n    })\r\n\r\n    const nftSourceData = await Promise.all(nftSourcePromises)\r\n\r\n    return nftSourceData.flat()\r\n  },\r\n)\r\n\r\nexport const collectiblesSlice = createSlice({\r\n  name: 'collectibles',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchWalletNfts.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n      state.data = action.payload.reduce((accum, association) => {\r\n        if (!association) {\r\n          return accum\r\n        }\r\n\r\n        const [tokenId, identifier] = association as NftSourceItem\r\n\r\n        return {\r\n          ...accum,\r\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\r\n        }\r\n      }, {})\r\n    })\r\n  },\r\n})\r\n\r\nexport default collectiblesSlice.reducer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  tokenPrice: number\r\n  apr: number\r\n  linkLabel: string\r\n  linkHref: string\r\n  earningTokenSymbol?: string\r\n  roundingDecimals?: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst GridItem = styled.div``\r\n\r\nconst GridHeaderItem = styled.div`\r\n  max-width: 180px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  tokenPrice,\r\n  apr,\r\n  linkLabel,\r\n  linkHref,\r\n  earningTokenSymbol = 'CAKE',\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\r\n\r\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 1,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 7,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 30,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 365,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n\r\n  return (\r\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('Timeframe')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\r\n            {t('ROI')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 1 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 7 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 30 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ maxWidth: '180px' }}>\r\n          <Text>{t('365d(APY)')}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{tokenEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Box mb=\"28px\" maxWidth=\"280px\">\r\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\r\n            {t(\r\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n              { freq: compoundFrequency.toLocaleString() },\r\n            )}\r\n          </Text>\r\n          {performanceFee > 0 && (\r\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\r\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const { user } = await request(\r\n      GRAPH_API_PROFILE,\r\n      gql`\r\n        query getUserPointIncreaseEvents($account: ID!) {\r\n          user(id: $account) {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      {\r\n        account: account.toLowerCase(),\r\n      },\r\n    )\r\n\r\n    return user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = [...state.data, ...action.payload]\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import { Farm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nconst useTabVisibility = () => {\r\n  const tabVisibleRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      tabVisibleRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return { tabVisibleRef }\r\n}\r\n\r\nexport default useTabVisibility\r\n","import React, { useState, useEffect } from 'react'\r\nimport useTabVisibility from 'hooks/useTabVisibility'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const { tabVisibleRef } = useTabVisibility()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (tabVisibleRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [tabVisibleRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (tabVisibleRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [tabVisibleRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import identity from 'lodash/identity'\r\nimport { useEffect, useState } from 'react'\r\n\r\ninterface UsePersistStateOptions {\r\n  localStorageKey: string\r\n  hydrate?: (value: any) => any\r\n  dehydrate?: (value: any) => any\r\n}\r\n\r\nconst defaultOptions = {\r\n  hydrate: identity,\r\n  dehydrate: identity,\r\n}\r\n\r\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\r\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\r\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const valueFromLS = localStorage.getItem(localStorageKey)\r\n\r\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\r\n  }, [value, localStorageKey, dehydrate])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default usePersistState\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n","import { Campaign } from 'config/constants/types'\r\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement, TranslatableText } from 'state/types'\r\nimport makeBatchRequest from './makeBatchRequest'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: string\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'IFO Shopper: %title%',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligible to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\r\n  const pointCenterContract = getPointCenterIfoContract()\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatuses = (await pointCenterContract.methods\r\n    .checkClaimStatuses(account, ifoCampaignAddresses)\r\n    .call()) as boolean[]\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await makeBatchRequest(\r\n    claimStatuses.reduce((accum, claimStatus, index) => {\r\n      if (claimStatus === true) {\r\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(claimableIfoDataItem.numberPoints),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport maxBy from 'lodash/maxBy'\r\nimport merge from 'lodash/merge'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\r\nimport {\r\n  makeFutureRoundResponse,\r\n  transformRoundResponse,\r\n  getBetHistory,\r\n  transformBetResponse,\r\n  getBet,\r\n  makeRoundData,\r\n} from './helpers'\r\n\r\nconst initialState: PredictionsState = {\r\n  status: PredictionStatus.INITIAL,\r\n  isLoading: false,\r\n  isHistoryPaneOpen: false,\r\n  isChartPaneOpen: false,\r\n  isFetchingHistory: false,\r\n  historyFilter: HistoryFilter.ALL,\r\n  currentEpoch: 0,\r\n  currentRoundStartBlockNumber: 0,\r\n  intervalBlocks: 100,\r\n  bufferBlocks: 2,\r\n  minBetAmount: '1000000000000000',\r\n  lastOraclePrice: BIG_ZERO.toJSON(),\r\n  rounds: {},\r\n  history: {},\r\n  bets: {},\r\n}\r\n\r\n// Thunks\r\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\r\n  'predictions/fetchBet',\r\n  async ({ account, id }) => {\r\n    const response = await getBet(id)\r\n    const bet = transformBetResponse(response)\r\n    return { account, bet }\r\n  },\r\n)\r\n\r\nexport const fetchRoundBet = createAsyncThunk<\r\n  { account: string; roundId: string; bet: Bet },\r\n  { account: string; roundId: string }\r\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\r\n  const betResponses = await getBetHistory({\r\n    user: account.toLowerCase(),\r\n    round: roundId,\r\n  })\r\n\r\n  // This should always return 0 or 1 bet because a user can only place\r\n  // one bet per round\r\n  if (betResponses && betResponses.length === 1) {\r\n    const [betResponse] = betResponses\r\n    return { account, roundId, bet: transformBetResponse(betResponse) }\r\n  }\r\n\r\n  return { account, roundId, bet: null }\r\n})\r\n\r\n/**\r\n * Used to poll the user bets of the current round cards\r\n */\r\nexport const fetchCurrentBets = createAsyncThunk<\r\n  { account: string; bets: Bet[] },\r\n  { account: string; roundIds: string[] }\r\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\r\n  const betResponses = await getBetHistory({\r\n    user: account.toLowerCase(),\r\n    round_in: roundIds,\r\n  })\r\n\r\n  return { account, bets: betResponses.map(transformBetResponse) }\r\n})\r\n\r\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\r\n  'predictions/fetchHistory',\r\n  async ({ account, claimed }) => {\r\n    const response = await getBetHistory({\r\n      user: account.toLowerCase(),\r\n      claimed,\r\n    })\r\n    const bets = response.map(transformBetResponse)\r\n\r\n    return { account, bets }\r\n  },\r\n)\r\n\r\nexport const predictionsSlice = createSlice({\r\n  name: 'predictions',\r\n  initialState,\r\n  reducers: {\r\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\r\n      state.status = action.payload\r\n    },\r\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isHistoryPaneOpen = action.payload\r\n      state.historyFilter = HistoryFilter.ALL\r\n    },\r\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isChartPaneOpen = action.payload\r\n    },\r\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\r\n      state.historyFilter = action.payload\r\n    },\r\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    },\r\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\r\n      const { rounds, market } = action.payload\r\n      const newRoundData = makeRoundData(rounds)\r\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\r\n\r\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\r\n        // Add new round\r\n        const newestRound = maxBy(rounds, 'epoch') as Round\r\n        const futureRound = transformRoundResponse(\r\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\r\n        )\r\n\r\n        newRoundData[futureRound.id] = futureRound\r\n      }\r\n\r\n      state.currentEpoch = incomingCurrentRound.epoch\r\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\r\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\r\n      state.rounds = { ...state.rounds, ...newRoundData }\r\n    },\r\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\r\n      state.currentEpoch = action.payload\r\n    },\r\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\r\n      const { account, roundId } = action.payload\r\n      const accountBets = state.bets[account]\r\n\r\n      if (accountBets && accountBets[roundId]) {\r\n        accountBets[roundId].claimed = true\r\n      }\r\n    },\r\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\r\n      const { account, roundId, bet } = action.payload\r\n\r\n      state.bets = {\r\n        ...state.bets,\r\n        [account]: {\r\n          ...state.bets[account],\r\n          [roundId]: bet,\r\n        },\r\n      }\r\n    },\r\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\r\n      state.lastOraclePrice = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Get unclaimed bets\r\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n      const betData = bets.reduce((accum, bet) => {\r\n        return {\r\n          ...accum,\r\n          [bet.round.id]: bet,\r\n        }\r\n      }, {})\r\n\r\n      state.bets = merge({}, state.bets, {\r\n        [account]: betData,\r\n      })\r\n    })\r\n\r\n    // Get round bet\r\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\r\n      const { account, roundId, bet } = action.payload\r\n\r\n      if (bet) {\r\n        state.bets = {\r\n          ...state.bets,\r\n          [account]: {\r\n            ...state.bets[account],\r\n            [roundId]: bet,\r\n          },\r\n        }\r\n      }\r\n    })\r\n\r\n    // Update Bet\r\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\r\n      const { account, bet } = action.payload\r\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\r\n    })\r\n\r\n    // Show History\r\n    builder.addCase(fetchHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n      state.isHistoryPaneOpen = true\r\n    })\r\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.isHistoryPaneOpen = true\r\n      state.history[account] = bets\r\n\r\n      // Save any fetched bets in the \"bets\" namespace\r\n      const betData = bets.reduce((accum, bet) => {\r\n        return {\r\n          ...accum,\r\n          [bet.round.id]: bet,\r\n        }\r\n      }, {})\r\n\r\n      state.bets = merge({}, state.bets, {\r\n        [account]: betData,\r\n      })\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  initialize,\r\n  setChartPaneState,\r\n  setCurrentEpoch,\r\n  setHistoryFilter,\r\n  setHistoryPaneState,\r\n  updateMarketData,\r\n  markBetAsCollected,\r\n  setPredictionStatus,\r\n  markPositionAsEntered,\r\n  setLastOraclePrice,\r\n} = predictionsSlice.actions\r\n\r\nexport default predictionsSlice.reducer\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { orderBy } from 'lodash'\r\nimport { Team } from 'config/constants/types'\r\nimport Nfts from 'config/constants/nfts'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  setBlock,\r\n} from './actions'\r\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchWalletNfts } from './collectibles'\r\nimport { getCanClaim } from './predictions/helpers'\r\nimport { transformPool } from './pools/helpers'\r\nimport { fetchPoolsStakingLimitsAsync } from './pools'\r\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\r\n\r\nexport const usePollFarmsData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = getWeb3NoAccount()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, web3, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 251 = CAKE-BNB LP\r\n * 252 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = getWeb3NoAccount()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\r\n  }, [dispatch, fastRefresh, web3])\r\n}\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const dispatch = useAppDispatch()\r\n  const web3 = getWeb3NoAccount()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch, web3])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): FarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n  }\r\n}\r\n\r\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\r\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\r\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.token.busdPrice)\r\n}\r\n\r\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\r\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\r\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\r\n  return tokenPrice\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n\r\n  return lpTokenPrice\r\n}\r\n\r\n// Pools\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = getWeb3NoAccount()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh, web3])\r\n}\r\n\r\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const usePoolFromPid = (sousId: number): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return transformPool(pool)\r\n}\r\n\r\nexport const useFetchCakeVault = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultPublicData())\r\n  }, [dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultUserData({ account }))\r\n  }, [dispatch, fastRefresh, account])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultFees())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useCakeVault = () => {\r\n  const {\r\n    totalShares: totalSharesAsString,\r\n    pricePerFullShare: pricePerFullShareAsString,\r\n    totalCakeInVault: totalCakeInVaultAsString,\r\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\r\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\r\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\r\n    userData: {\r\n      isLoading,\r\n      userShares: userSharesAsString,\r\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  } = useSelector((state: State) => state.pools.cakeVault)\r\n\r\n  const estimatedCakeBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyRewardAsString)\r\n  }, [estimatedCakeBountyRewardAsString])\r\n\r\n  const totalPendingCakeHarvest = useMemo(() => {\r\n    return new BigNumber(totalPendingCakeHarvestAsString)\r\n  }, [totalPendingCakeHarvestAsString])\r\n\r\n  const totalShares = useMemo(() => {\r\n    return new BigNumber(totalSharesAsString)\r\n  }, [totalSharesAsString])\r\n\r\n  const pricePerFullShare = useMemo(() => {\r\n    return new BigNumber(pricePerFullShareAsString)\r\n  }, [pricePerFullShareAsString])\r\n\r\n  const totalCakeInVault = useMemo(() => {\r\n    return new BigNumber(totalCakeInVaultAsString)\r\n  }, [totalCakeInVaultAsString])\r\n\r\n  const userShares = useMemo(() => {\r\n    return new BigNumber(userSharesAsString)\r\n  }, [userSharesAsString])\r\n\r\n  const cakeAtLastUserAction = useMemo(() => {\r\n    return new BigNumber(cakeAtLastUserActionAsString)\r\n  }, [cakeAtLastUserActionAsString])\r\n\r\n  return {\r\n    totalShares,\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: {\r\n      performanceFee,\r\n      callFee,\r\n      withdrawalFee,\r\n      withdrawalFeePeriod,\r\n    },\r\n    userData: {\r\n      isLoading,\r\n      userShares,\r\n      cakeAtLastUserAction,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  }\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const bnbBusdFarm = useFarmFromPid(252)\r\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const cakeBnbFarm = useFarmFromPid(251)\r\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\r\n}\r\n\r\n// Block\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n\r\n// Predictions\r\nexport const useIsHistoryPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\r\n}\r\n\r\nexport const useIsChartPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\r\n}\r\n\r\nexport const useGetRounds = () => {\r\n  return useSelector((state: State) => state.predictions.rounds)\r\n}\r\n\r\nexport const useGetSortedRounds = () => {\r\n  const roundData = useGetRounds()\r\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\r\n}\r\n\r\nexport const useGetCurrentEpoch = () => {\r\n  return useSelector((state: State) => state.predictions.currentEpoch)\r\n}\r\n\r\nexport const useGetIntervalBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.intervalBlocks)\r\n}\r\n\r\nexport const useGetBufferBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.bufferBlocks)\r\n}\r\n\r\nexport const useGetTotalIntervalBlocks = () => {\r\n  const intervalBlocks = useGetIntervalBlocks()\r\n  const bufferBlocks = useGetBufferBlocks()\r\n  return intervalBlocks + bufferBlocks\r\n}\r\n\r\nexport const useGetRound = (id: string) => {\r\n  const rounds = useGetRounds()\r\n  return rounds[id]\r\n}\r\n\r\nexport const useGetCurrentRound = () => {\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const rounds = useGetSortedRounds()\r\n  return rounds.find((round) => round.epoch === currentEpoch)\r\n}\r\n\r\nexport const useGetPredictionsStatus = () => {\r\n  return useSelector((state: State) => state.predictions.status)\r\n}\r\n\r\nexport const useGetHistoryFilter = () => {\r\n  return useSelector((state: State) => state.predictions.historyFilter)\r\n}\r\n\r\nexport const useGetCurrentRoundBlockNumber = () => {\r\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\r\n}\r\n\r\nexport const useGetMinBetAmount = () => {\r\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\r\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\r\n}\r\n\r\nexport const useGetIsFetchingHistory = () => {\r\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\r\n}\r\n\r\nexport const useGetHistory = () => {\r\n  return useSelector((state: State) => state.predictions.history)\r\n}\r\n\r\nexport const useGetHistoryByAccount = (account: string) => {\r\n  const bets = useGetHistory()\r\n  return bets ? bets[account] : []\r\n}\r\n\r\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\r\n  const bets = useSelector((state: State) => state.predictions.bets)\r\n\r\n  if (!bets[account]) {\r\n    return null\r\n  }\r\n\r\n  if (!bets[account][roundId]) {\r\n    return null\r\n  }\r\n\r\n  return bets[account][roundId]\r\n}\r\n\r\nexport const useBetCanClaim = (account: string, roundId: string) => {\r\n  const bet = useGetBetByRoundId(account, roundId)\r\n\r\n  if (!bet) {\r\n    return false\r\n  }\r\n\r\n  return getCanClaim(bet)\r\n}\r\n\r\nexport const useGetLastOraclePrice = (): BigNumber => {\r\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\r\n  return new BigNumber(lastOraclePrice)\r\n}\r\n\r\n// Collectibles\r\nexport const useGetCollectibles = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\r\n  const identifiers = Object.keys(data)\r\n\r\n  useEffect(() => {\r\n    // Fetch nfts only if we have not done so already\r\n    if (!isInitialized) {\r\n      dispatch(fetchWalletNfts(account))\r\n    }\r\n  }, [isInitialized, account, dispatch])\r\n\r\n  return {\r\n    isInitialized,\r\n    isLoading,\r\n    tokenIds: data,\r\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 10 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(40)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\nexport const BASE_URL = 'https://pancakeswap.finance'\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 1\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const DEFAULT_GAS_PRICE = 5\r\nexport const TESTNET_CHAIN_ID = '97'\r\nexport const MAINNET_CHAIN_ID = '56'\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\r\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\nexport default null\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text>{options[selectedOptionIndex].label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      console.info(txHash)\r\n    },\r\n    [account, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (enableEmergencyWithdraw) {\r\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    return txHash\r\n  }, [account, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      {prefix && <span>{prefix}</span>}\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {unit && <span>{unit}</span>}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_PRICE } from 'config'\r\nimport { getDecimalAmount } from './formatBalance'\r\n\r\nexport interface UserSettings {\r\n  gasPrice: number\r\n}\r\n\r\nexport const VERSION = 1.01\r\n\r\nexport const GAS_SETTINGS = {\r\n  default: DEFAULT_GAS_PRICE,\r\n  fast: 10,\r\n  reallyfast: 15,\r\n}\r\n\r\nexport const getGasPriceInWei = (amountInGwei: number) => {\r\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\r\n}\r\n\r\nexport const getDefaultSettings = (): UserSettings => ({\r\n  gasPrice: GAS_SETTINGS.default,\r\n})\r\n\r\nexport const getStorageKey = (account: string) => {\r\n  return `pancakeswap_settings_${account}_${VERSION}`\r\n}\r\n\r\nexport const getSettings = (account: string): UserSettings => {\r\n  try {\r\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\r\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\r\n  } catch (error) {\r\n    return getDefaultSettings()\r\n  }\r\n}\r\n\r\nexport const setSettings = (account: string, newSettings: UserSettings) => {\r\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\r\n}\r\n\r\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\r\n  const currentSettings = getSettings(account)\r\n  setSettings(account, { ...currentSettings, ...newSetting })\r\n}\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryAddress,\r\n  getLotteryTicketAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\r\nimport { getSettings, getGasPriceInWei } from './settings'\r\n\r\nexport const getDefaultGasPrice = () => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  if (chainId === TESTNET_CHAIN_ID) {\r\n    return 10\r\n  }\r\n  return DEFAULT_GAS_PRICE\r\n}\r\n\r\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\r\n  const _web3 = web3 ?? web3NoAccount\r\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\r\n\r\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\r\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\r\n  })\r\n}\r\n\r\nexport const getBep20Contract = (address: string, web3?: Web3) => {\r\n  return getContract(bep20Abi, address, web3)\r\n}\r\nexport const getErc721Contract = (address: string, web3?: Web3) => {\r\n  return getContract(erc721Abi, address, web3)\r\n}\r\nexport const getLpContract = (address: string, web3?: Web3) => {\r\n  return getContract(lpTokenAbi, address, web3)\r\n}\r\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoV1Abi, address, web3)\r\n}\r\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoV2Abi, address, web3)\r\n}\r\nexport const getSouschefContract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getPointCenterIfoContract = (web3?: Web3) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\r\n}\r\nexport const getCakeContract = (web3?: Web3) => {\r\n  return getContract(cakeAbi, getCakeAddress(), web3)\r\n}\r\nexport const getProfileContract = (web3?: Web3) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\r\n}\r\nexport const getPancakeRabbitContract = (web3?: Web3) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\r\n}\r\nexport const getBunnyFactoryContract = (web3?: Web3) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\r\n}\r\nexport const getBunnySpecialContract = (web3?: Web3) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\r\n}\r\nexport const getLotteryContract = (web3?: Web3) => {\r\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\r\n}\r\nexport const getLotteryTicketContract = (web3?: Web3) => {\r\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\r\n}\r\nexport const getLotteryV2Contract = (web3?: Web3) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\r\n}\r\nexport const getMasterchefContract = (web3?: Web3) => {\r\n  return getContract(masterChef, getMasterChefAddress(), web3)\r\n}\r\nexport const getClaimRefundContract = (web3?: Web3) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\r\n}\r\nexport const getTradingCompetitionContract = (web3?: Web3) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\r\n}\r\nexport const getEasterNftContract = (web3?: Web3) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\r\n}\r\nexport const getCakeVaultContract = (web3?: Web3) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\r\n}\r\nexport const getPredictionsContract = (web3?: Web3) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\r\n}\r\nexport const getChainlinkOracleContract = (web3?: Web3) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\r\n}\r\n","const ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport default isArchivedPid\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../layout/Container'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getEasterNftContract(web3), [web3])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeVaultContract(web3), [web3])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPredictionsContract(web3), [web3])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\r\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\r\n\r\nexport const getAprData = (pool: Pool, performanceFee: number) => {\r\n  const { isAutoVault, earningTokenPrice, apr } = pool\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimals = isHighValueToken ? 4 : 2\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\r\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n      numberOfDays: 365,\r\n      farmApr: apr,\r\n      tokenPrice: earningTokenPrice,\r\n      roundingDecimals,\r\n      compoundFrequency,\r\n      performanceFee,\r\n    })\r\n    const autoApr = getRoi({\r\n      amountEarned: tokenEarnedPerThousand365D,\r\n      amountInvested: oneThousandDollarsWorthOfToken,\r\n    })\r\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n  }\r\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport predictionsReducer from './predictions'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\nimport collectiblesReducer from './collectibles'\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    predictions: predictionsReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    collectibles: collectiblesReducer,\r\n  },\r\n})\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport default store\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  web3?: Web3\r\n  blockNumber?: number\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\r\n  try {\r\n    const web3 = options.web3 || getWeb3NoAccount()\r\n    const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\r\n    const itf = new Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\r\n */\r\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\r\n  const web3 = options.web3 || getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.methods\r\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\r\n    .call(undefined, options.blockNumber)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return {\r\n      result,\r\n      data: itf.decodeFunctionResult(calls[i].name, data),\r\n    }\r\n  })\r\n\r\n  return res\r\n}\r\nexport default multicall\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nconst getWeb3WithArchivedNodeProvider = () => {\r\n  const archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\r\n  return new Web3(archivedHttpProvider)\r\n}\r\n\r\nexport { getWeb3NoAccount, getWeb3WithArchivedNodeProvider }\r\nexport default web3NoAccount\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\r\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\r\nexport { setBlock } from './block'\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport { ethers } from 'ethers'\r\nimport { Pair, TokenAmount, Token } from '@pancakeswap-libs/sdk'\r\nimport { getLpContract, getMasterchefContract } from 'utils/contractHelpers'\r\nimport farms from 'config/constants/farms'\r\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\r\nimport tokens from 'config/constants/tokens'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport { multicallv2 } from './multicall'\r\nimport { getWeb3WithArchivedNodeProvider } from './web3'\r\nimport { getBalanceAmount } from './formatBalance'\r\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({\r\n      from: account,\r\n      gas: DEFAULT_GAS_LIMIT,\r\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\r\n    })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .leaveStaking('0')\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\nconst cakeBnbPid = 251\r\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\r\n\r\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\r\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\r\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\r\n\r\n/**\r\n * Returns the total CAKE staked in the CAKE-BNB LP\r\n */\r\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\r\n  try {\r\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\r\n    const masterContract = getMasterchefContract(archivedWeb3)\r\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), archivedWeb3)\r\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\r\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\r\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\r\n\r\n    const pair: Pair = new Pair(\r\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\r\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\r\n    )\r\n    const cakeLPBalance = pair.getLiquidityValue(\r\n      pair.token0,\r\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\r\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\r\n      false,\r\n    )\r\n\r\n    return new BigNumber(cakeLPBalance.toSignificant(18))\r\n  } catch (error) {\r\n    console.error(`CAKE-BNB LP error: ${error}`)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the cake staked in the main pool\r\n */\r\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\r\n  try {\r\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\r\n    const masterContract = getMasterchefContract(archivedWeb3)\r\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\r\n\r\n    return getBalanceAmount(new BigNumber(response.amount))\r\n  } catch (error) {\r\n    console.error('Error getting stake in CAKE pool', error)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\n/**\r\n * Returns total staked value of active pools\r\n */\r\nexport const getUserStakeInPools = async (account: string, block?: number) => {\r\n  try {\r\n    const multicallOptions = {\r\n      web3: getWeb3WithArchivedNodeProvider(),\r\n      blockNumber: block,\r\n      requireSuccess: false,\r\n    }\r\n    const eligiblePools = pools\r\n      .filter((pool) => pool.sousId !== 0)\r\n      .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n\r\n    // Get the ending block is eligible pools\r\n    const endBlockCalls = eligiblePools.map((eligiblePool) => ({\r\n      address: getAddress(eligiblePool.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }))\r\n    const startBlockCalls = eligiblePools.map((eligiblePool) => ({\r\n      address: getAddress(eligiblePool.contractAddress),\r\n      name: 'startBlock',\r\n    }))\r\n    const endBlocks = await multicallv2(sousChefABI, endBlockCalls, multicallOptions)\r\n    const startBlocks = await multicallv2(sousChefABI, startBlockCalls, multicallOptions)\r\n\r\n    // Filter out pools that have ended\r\n    const activePools = eligiblePools.filter((eligiblePool, index) => {\r\n      const endBlock = new BigNumber(endBlocks[index])\r\n      const startBlock = new BigNumber(startBlocks[index])\r\n\r\n      return startBlock.lte(block) && endBlock.gte(block)\r\n    })\r\n\r\n    // Get the user info of each pool\r\n    const userInfoCalls = activePools.map((activePool) => ({\r\n      address: getAddress(activePool.contractAddress),\r\n      name: 'userInfo',\r\n      params: [account],\r\n    }))\r\n    const userInfos = await multicallv2(sousChefABI, userInfoCalls, multicallOptions)\r\n\r\n    return userInfos.reduce((accum: BigNumber, userInfo) => {\r\n      return accum.plus(new BigNumber(userInfo.amount._hex))\r\n    }, new BigNumber(0))\r\n  } catch (error) {\r\n    console.error('Error fetching staked values:', error)\r\n    return BIG_ZERO\r\n  }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.stakingToken.address),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSouschefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\r\n    return new BigNumber(stakingLimit)\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3NoAccount()\r\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\r\n      cakeVaultContract.methods.getPricePerFullShare().call,\r\n      cakeVaultContract.methods.totalShares().call,\r\n      cakeVaultContract.methods.calculateHarvestCakeRewards().call,\r\n      cakeVaultContract.methods.calculateTotalPendingCakeRewards().call,\r\n    ])\r\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\r\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\r\n      cakeVaultContract.methods.performanceFee().call,\r\n      cakeVaultContract.methods.callFee().call,\r\n      cakeVaultContract.methods.withdrawFee().call,\r\n      cakeVaultContract.methods.withdrawFeePeriod().call,\r\n    ])\r\n    return {\r\n      performanceFee: parseInt(performanceFee as string, 10),\r\n      callFee: parseInt(callFee as string, 10),\r\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\r\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\r\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n          stakingTokenPrice,\r\n          earningTokenPrice,\r\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n          parseFloat(pool.tokenPerBlock),\r\n        )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    const stakingTokenBalances = await fetchUserBalances(account)\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n    const userData = poolsConfig.map((pool) => ({\r\n      sousId: pool.sousId,\r\n      allowance: allowances[pool.sousId],\r\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n      stakedBalance: stakedBalances[pool.sousId],\r\n      pendingReward: pendingRewards[pool.sousId],\r\n    }))\r\n\r\n    dispatch(setPoolsUserData(userData))\r\n  }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n  }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const tokenBalances = await fetchUserBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n  }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import tokens from './tokens'\r\nimport { PoolConfig, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 174,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4843',\r\n  },\r\n  {\r\n    sousId: 173,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6741',\r\n  },\r\n  {\r\n    sousId: 172,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.marsh,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1108',\r\n  },\r\n  {\r\n    sousId: 171,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mbox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4803',\r\n  },\r\n  {\r\n    sousId: 170,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ata,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 169,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.27777',\r\n  },\r\n  {\r\n    sousId: 168,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bcfx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 167,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.qkc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.9143',\r\n  },\r\n  {\r\n    sousId: 166,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ktn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01215',\r\n  },\r\n  {\r\n    sousId: 165,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mtrg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.05613',\r\n  },\r\n  {\r\n    sousId: 164,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 163,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.vrt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '40.5092',\r\n  },\r\n  {\r\n    sousId: 162,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 161,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ez,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01736',\r\n  },\r\n  {\r\n    sousId: 160,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    tokenPerBlock: '0.00868',\r\n  },\r\n  {\r\n    sousId: 159,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.popen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.19097',\r\n  },\r\n  {\r\n    sousId: 158,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.023148',\r\n  },\r\n  {\r\n    sousId: 157,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.well,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2025',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 156,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.deri,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.6087',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 155,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.chr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.655',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 154,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cyc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00015914',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 153,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xend,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.31828',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 152,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.03553',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 151,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hotcross,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 150,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.rfox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 149,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.wmass,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.24942',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 148,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ubxt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.4074',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 147,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.btr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 146,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.τdoge,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.868',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 145,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01261',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 144,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.one,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '57.87',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 143,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.fine,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1342',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 142,\r\n    stakingToken: tokens.doge,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01388',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 141,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01331',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 140,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oin,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 139,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hyfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 138,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.kun,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23148',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 137,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.math,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15798',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 136,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.17361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 135,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '462.96',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 134,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '4.0509',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 133,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '79.86',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 132,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lmt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.66145',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 131,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pnt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09548',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 130,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0298',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 129,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4861',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 128,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 127,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 126,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 125,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 124,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 123,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 122,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 121,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 120,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 119,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 118,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 117,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.009837',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 116,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dfd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.46296',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 115,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.alpaca,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.22743',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 114,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 113,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 112,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.21527',\r\n  },\r\n  {\r\n    sousId: 111,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 110,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 109,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 108,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mix,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3721',\r\n  },\r\n  {\r\n    sousId: 107,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.3356',\r\n  },\r\n  {\r\n    sousId: 106,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '14.4675',\r\n  },\r\n  {\r\n    sousId: 105,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hzn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 104,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.alpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23495',\r\n  },\r\n  {\r\n    sousId: 103,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 102,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tlm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '17.361',\r\n  },\r\n  {\r\n    sousId: 101,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08796',\r\n  },\r\n  {\r\n    sousId: 100,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.eps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.07716',\r\n  },\r\n  {\r\n    sousId: 99,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 98,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.itam,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.096',\r\n  },\r\n  {\r\n    sousId: 97,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 96,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tko,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n  },\r\n  {\r\n    sousId: 95,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.apys,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09953',\r\n  },\r\n  {\r\n    sousId: 94,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hoo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.489',\r\n  },\r\n  {\r\n    sousId: 93,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 92,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.easy,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0072338',\r\n  },\r\n  {\r\n    sousId: 91,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nrv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15046',\r\n  },\r\n  {\r\n    sousId: 90,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dego,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00405',\r\n  },\r\n  {\r\n    sousId: 89,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 88,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 87,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6811',\r\n  },\r\n  {\r\n    sousId: 86,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swth,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.3148',\r\n  },\r\n  {\r\n    sousId: 85,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 84,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.zil,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.0995',\r\n  },\r\n  {\r\n    sousId: 83,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.pcws,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00434',\r\n  },\r\n  {\r\n    sousId: 82,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 81,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 80,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.2893',\r\n  },\r\n  {\r\n    sousId: 79,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 78,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 77,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.trade,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4484',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 76,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dusk,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4629',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 75,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bifi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00007234',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 74,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.txl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.434027',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 73,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5.787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 72,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bunny,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00289',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 71,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.alice,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.14467',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 70,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.for,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '2.8935',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 69,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bux,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 68,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nuls,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0868',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 67,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.belt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00868',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 66,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4861',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 65,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0001157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 64,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.009837',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 63,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0549',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 62,\r\n    stakingToken: tokens.tpt,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0462',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 61,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.tpt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '3.616',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 60,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.watch,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.3472',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 59,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0413',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 58,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 57,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.iotx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '6.365',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 56,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bor,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.000395',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 55,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bopen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0723',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 54,\r\n    stakingToken: tokens.sushi,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0367',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 53,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.dodo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0578',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 52,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.13',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 51,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bry,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 50,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.zee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1736',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 49,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.swgb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.899',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 48,\r\n    stakingToken: tokens.comp,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.055',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 47,\r\n    stakingToken: tokens.comp,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.55',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 46,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.sfp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.6',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 45,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 44,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 43,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.lit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.231',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 42,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0138',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 41,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bdo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.075',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 40,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.egld,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.001215',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 39,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 38,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.wsote,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.23',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 37,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.front,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2546',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 36,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.helmet,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.81',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 35,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.btcst,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.011574',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 34,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bscx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.17361',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 33,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ten,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.05787',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 32,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.balbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4166',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 31,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.asr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 30,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.atm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 29,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.og,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 28,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.reef,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '115.74',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 27,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ditto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 26,\r\n    stakingToken: tokens.twt,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 24,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.juv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 25,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.psg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 21,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.vai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.104',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 20,\r\n    stakingToken: tokens.bnb,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\r\n    },\r\n    poolCategory: PoolCategory.BINANCE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 19,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.bnb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0041',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 18,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 17,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 16,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.unfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02893',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 15,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.twt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 14,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.hard,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.346',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 13,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '12.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 12,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.stax,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 11,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nar,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '1',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 10,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.nya,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '10',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 9,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.ctk,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 8,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.twt,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '20',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 7,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.inj,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.25',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AnyAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\r\n\r\nexport type TranslatableText =\r\n  | string\r\n  | {\r\n      key: string\r\n      data?: {\r\n        [key: string]: string | number\r\n      }\r\n    }\r\n\r\nexport type SerializedBigNumber = string\r\n\r\nexport interface Farm extends FarmConfig {\r\n  tokenAmountMc?: SerializedBigNumber\r\n  quoteTokenAmountMc?: SerializedBigNumber\r\n  tokenAmountTotal?: SerializedBigNumber\r\n  quoteTokenAmountTotal?: SerializedBigNumber\r\n  lpTotalInQuoteToken?: SerializedBigNumber\r\n  lpTotalSupply?: SerializedBigNumber\r\n  tokenPriceVsQuote?: SerializedBigNumber\r\n  poolWeight?: SerializedBigNumber\r\n  userData?: {\r\n    allowance: string\r\n    tokenBalance: string\r\n    stakedBalance: string\r\n    earnings: string\r\n  }\r\n}\r\n\r\nexport interface Pool extends PoolConfig {\r\n  totalStaked?: BigNumber\r\n  stakingLimit?: BigNumber\r\n  startBlock?: number\r\n  endBlock?: number\r\n  apr?: number\r\n  stakingTokenPrice?: number\r\n  earningTokenPrice?: number\r\n  isAutoVault?: boolean\r\n  userData?: {\r\n    allowance: BigNumber\r\n    stakingTokenBalance: BigNumber\r\n    stakedBalance: BigNumber\r\n    pendingReward: BigNumber\r\n  }\r\n}\r\n\r\nexport interface Profile {\r\n  userId: number\r\n  points: number\r\n  teamId: number\r\n  nftAddress: string\r\n  tokenId: number\r\n  isActive: boolean\r\n  username: string\r\n  nft?: Nft\r\n  team: Team\r\n  hasRegistered: boolean\r\n}\r\n\r\n// Slices states\r\n\r\nexport interface FarmsState {\r\n  data: Farm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface VaultFees {\r\n  performanceFee: number\r\n  callFee: number\r\n  withdrawalFee: number\r\n  withdrawalFeePeriod: number\r\n}\r\n\r\nexport interface VaultUser {\r\n  isLoading: boolean\r\n  userShares: string\r\n  cakeAtLastUserAction: string\r\n  lastDepositedTime: string\r\n  lastUserActionTime: string\r\n}\r\nexport interface CakeVault {\r\n  totalShares?: string\r\n  pricePerFullShare?: string\r\n  totalCakeInVault?: string\r\n  estimatedCakeBountyReward?: string\r\n  totalPendingCakeHarvest?: string\r\n  fees?: VaultFees\r\n  userData?: VaultUser\r\n}\r\n\r\nexport interface PoolsState {\r\n  data: Pool[]\r\n  cakeVault: CakeVault\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface ProfileState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  hasRegistered: boolean\r\n  data: Profile\r\n}\r\n\r\nexport type TeamResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: boolean\r\n}\r\n\r\nexport type TeamsById = {\r\n  [key: string]: Team\r\n}\r\n\r\nexport interface TeamsState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: TeamsById\r\n}\r\n\r\nexport interface Achievement {\r\n  id: string\r\n  type: CampaignType\r\n  address: string\r\n  title: TranslatableText\r\n  description?: TranslatableText\r\n  badge: string\r\n  points: number\r\n}\r\n\r\nexport interface AchievementState {\r\n  data: Achievement[]\r\n}\r\n\r\n// Block\r\n\r\nexport interface BlockState {\r\n  currentBlock: number\r\n  initialBlock: number\r\n}\r\n\r\n// Collectibles\r\n\r\nexport interface CollectiblesState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: {\r\n    [key: string]: number[]\r\n  }\r\n}\r\n\r\n// Predictions\r\n\r\nexport enum BetPosition {\r\n  BULL = 'Bull',\r\n  BEAR = 'Bear',\r\n  HOUSE = 'House',\r\n}\r\n\r\nexport enum PredictionStatus {\r\n  INITIAL = 'initial',\r\n  LIVE = 'live',\r\n  PAUSED = 'paused',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface Round {\r\n  id: string\r\n  epoch: number\r\n  failed?: boolean\r\n  startBlock: number\r\n  startAt: number\r\n  lockAt: number\r\n  lockBlock: number\r\n  lockPrice: number\r\n  endBlock: number\r\n  closePrice: number\r\n  totalBets: number\r\n  totalAmount: number\r\n  bullBets: number\r\n  bearBets: number\r\n  bearAmount: number\r\n  bullAmount: number\r\n  position: BetPosition\r\n  bets?: Bet[]\r\n}\r\n\r\nexport interface Market {\r\n  id: string\r\n  paused: boolean\r\n  epoch: number\r\n}\r\n\r\nexport interface Bet {\r\n  id?: string\r\n  hash?: string\r\n  amount: number\r\n  position: BetPosition\r\n  claimed: boolean\r\n  claimedHash: string\r\n  user?: PredictionUser\r\n  round: Round\r\n}\r\n\r\nexport interface PredictionUser {\r\n  id: string\r\n  address: string\r\n  block: number\r\n  totalBets: number\r\n  totalBNB: number\r\n}\r\n\r\nexport interface RoundData {\r\n  [key: string]: Round\r\n}\r\n\r\nexport interface HistoryData {\r\n  [key: string]: Bet[]\r\n}\r\n\r\nexport interface BetData {\r\n  [key: string]: {\r\n    [key: string]: Bet\r\n  }\r\n}\r\n\r\nexport enum HistoryFilter {\r\n  ALL = 'all',\r\n  COLLECTED = 'collected',\r\n  UNCOLLECTED = 'uncollected',\r\n}\r\n\r\nexport interface PredictionsState {\r\n  status: PredictionStatus\r\n  isLoading: boolean\r\n  isHistoryPaneOpen: boolean\r\n  isChartPaneOpen: boolean\r\n  isFetchingHistory: boolean\r\n  historyFilter: HistoryFilter\r\n  currentEpoch: number\r\n  currentRoundStartBlockNumber: number\r\n  intervalBlocks: number\r\n  bufferBlocks: number\r\n  minBetAmount: string\r\n  lastOraclePrice: string\r\n  rounds: RoundData\r\n  history: HistoryData\r\n  bets: BetData\r\n}\r\n\r\n// Global state\r\n\r\nexport interface State {\r\n  achievements: AchievementState\r\n  block: BlockState\r\n  farms: FarmsState\r\n  pools: PoolsState\r\n  predictions: PredictionsState\r\n  profile: ProfileState\r\n  teams: TeamsState\r\n  collectibles: CollectiblesState\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\r\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport {\r\n  BetResponse,\r\n  getRoundBaseFields,\r\n  getBetBaseFields,\r\n  getUserBaseFields,\r\n  RoundResponse,\r\n  MarketResponse,\r\n} from './queries'\r\n\r\nexport enum Result {\r\n  WIN = 'win',\r\n  LOSE = 'lose',\r\n  CANCELED = 'canceled',\r\n  LIVE = 'live',\r\n}\r\n\r\nexport const numberOrNull = (value: string) => {\r\n  if (value === null) {\r\n    return null\r\n  }\r\n\r\n  const valueNum = Number(value)\r\n  return Number.isNaN(valueNum) ? null : valueNum\r\n}\r\n\r\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\r\n  return {\r\n    id: epoch.toString(),\r\n    epoch: epoch.toString(),\r\n    startBlock: startBlock.toString(),\r\n    failed: null,\r\n    startAt: null,\r\n    lockAt: null,\r\n    lockBlock: null,\r\n    lockPrice: null,\r\n    endBlock: null,\r\n    closePrice: null,\r\n    totalBets: '0',\r\n    totalAmount: '0',\r\n    bearBets: '0',\r\n    bullBets: '0',\r\n    bearAmount: '0',\r\n    bullAmount: '0',\r\n    position: null,\r\n    bets: [],\r\n  }\r\n}\r\n\r\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\r\n  const bet = {\r\n    id: betResponse.id,\r\n    hash: betResponse.hash,\r\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\r\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\r\n    claimed: betResponse.claimed,\r\n    claimedHash: betResponse.claimedHash,\r\n    user: {\r\n      id: betResponse.user.id,\r\n      address: betResponse.user.address,\r\n      block: numberOrNull(betResponse.user.block),\r\n      totalBets: numberOrNull(betResponse.user.totalBets),\r\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\r\n    },\r\n  } as Bet\r\n\r\n  if (betResponse.round) {\r\n    bet.round = transformRoundResponse(betResponse.round)\r\n  }\r\n\r\n  return bet\r\n}\r\n\r\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\r\n  const {\r\n    id,\r\n    epoch,\r\n    failed,\r\n    startBlock,\r\n    startAt,\r\n    lockAt,\r\n    lockBlock,\r\n    lockPrice,\r\n    endBlock,\r\n    closePrice,\r\n    totalBets,\r\n    totalAmount,\r\n    bullBets,\r\n    bearBets,\r\n    bearAmount,\r\n    bullAmount,\r\n    position,\r\n    bets = [],\r\n  } = roundResponse\r\n\r\n  const getRoundPosition = (positionResponse: string) => {\r\n    if (positionResponse === 'Bull') {\r\n      return BetPosition.BULL\r\n    }\r\n\r\n    if (positionResponse === 'Bear') {\r\n      return BetPosition.BEAR\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return {\r\n    id,\r\n    failed,\r\n    epoch: numberOrNull(epoch),\r\n    startBlock: numberOrNull(startBlock),\r\n    startAt: numberOrNull(startAt),\r\n    lockAt: numberOrNull(lockAt),\r\n    lockBlock: numberOrNull(lockBlock),\r\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\r\n    endBlock: numberOrNull(endBlock),\r\n    closePrice: closePrice ? parseFloat(closePrice) : null,\r\n    totalBets: numberOrNull(totalBets),\r\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\r\n    bullBets: numberOrNull(bullBets),\r\n    bearBets: numberOrNull(bearBets),\r\n    bearAmount: numberOrNull(bearAmount),\r\n    bullAmount: numberOrNull(bullAmount),\r\n    position: getRoundPosition(position),\r\n    bets: bets.map(transformBetResponse),\r\n  }\r\n}\r\n\r\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\r\n  return {\r\n    id: marketResponse.id,\r\n    paused: marketResponse.paused,\r\n    epoch: Number(marketResponse.epoch.epoch),\r\n  }\r\n}\r\n\r\nexport const makeRoundData = (rounds: Round[]): RoundData => {\r\n  return rounds.reduce((accum, round) => {\r\n    return {\r\n      ...accum,\r\n      [round.id]: round,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\r\n  const { round } = bet\r\n  if (round.failed) {\r\n    return Result.CANCELED\r\n  }\r\n\r\n  if (round.epoch >= currentEpoch - 1) {\r\n    return Result.LIVE\r\n  }\r\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n\r\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\r\n}\r\n\r\n/**\r\n * Given a bet object, check if it is eligible to be claimed or refunded\r\n */\r\nexport const getCanClaim = (bet: Bet) => {\r\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\r\n}\r\n\r\n/**\r\n * Returns only bets where the user has won.\r\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\r\n */\r\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\r\n  return bets.filter(getCanClaim)\r\n}\r\n\r\n/**\r\n * Gets static data from the contract\r\n */\r\nexport const getStaticPredictionsData = async () => {\r\n  const { methods } = getPredictionsContract()\r\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\r\n    methods.currentEpoch().call,\r\n    methods.intervalBlocks().call,\r\n    methods.minBetAmount().call,\r\n    methods.paused().call,\r\n    methods.bufferBlocks().call,\r\n  ])\r\n\r\n  return {\r\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\r\n    currentEpoch: Number(currentEpoch),\r\n    intervalBlocks: Number(intervalBlocks),\r\n    bufferBlocks: Number(bufferBlocks),\r\n    minBetAmount,\r\n  }\r\n}\r\n\r\nexport const getMarketData = async (): Promise<{\r\n  rounds: Round[]\r\n  market: Market\r\n}> => {\r\n  const response = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getMarketData {\r\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\r\n          ${getRoundBaseFields()}\r\n        }\r\n        market(id: 1) {\r\n          id\r\n          paused\r\n          epoch {\r\n            epoch\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\r\n\r\n  return {\r\n    rounds: response.rounds.map(transformRoundResponse),\r\n    market: transformMarketResponse(response.market),\r\n  }\r\n}\r\n\r\nexport const getRound = async (id: string) => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getRound($id: ID!) {\r\n        round(id: $id) {\r\n          ${getRoundBaseFields()}\r\n          bets {\r\n           ${getBetBaseFields()}\r\n            user {\r\n             ${getUserBaseFields()}\r\n            }\r\n          }\r\n        }\r\n      }\r\n  `,\r\n    { id },\r\n  )\r\n  return response.round\r\n}\r\n\r\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\r\n\r\nexport const getBetHistory = async (\r\n  where: BetHistoryWhereClause = {},\r\n  first = 1000,\r\n  skip = 0,\r\n): Promise<BetResponse[]> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\r\n        bets(first: $first, skip: $skip, where: $where) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.bets\r\n}\r\n\r\nexport const getBet = async (betId: string): Promise<BetResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBet($id: ID!) {\r\n        bet(id: $id) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: betId.toLowerCase(),\r\n    },\r\n  )\r\n  return response.bet\r\n}\r\n","export interface UserResponse {\r\n  id: string\r\n  address: string\r\n  block: string\r\n  totalBets: string\r\n  totalBNB: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface BetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  claimedHash: string\r\n  user?: UserResponse\r\n  round?: RoundResponse\r\n}\r\n\r\nexport interface HistoricalBetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  user?: UserResponse\r\n  round: {\r\n    id: string\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface RoundResponse {\r\n  id: string\r\n  epoch: string\r\n  failed: boolean\r\n  startBlock: string\r\n  startAt: string\r\n  lockAt: string\r\n  lockBlock: string\r\n  lockPrice: string\r\n  endBlock: string\r\n  closePrice: string\r\n  totalBets: string\r\n  totalAmount: string\r\n  bearBets: string\r\n  bullBets: string\r\n  bearAmount: string\r\n  bullAmount: string\r\n  position: string\r\n  bets: BetResponse[]\r\n}\r\n\r\nexport interface MarketResponse {\r\n  id: string\r\n  paused: boolean\r\n  epoch: {\r\n    epoch: string\r\n  }\r\n}\r\n\r\n/**\r\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\r\n */\r\nexport const getRoundBaseFields = () => `\r\n  id\r\n  epoch\r\n  failed\r\n  startAt\r\n  startBlock\r\n  lockAt\r\n  lockBlock\r\n  lockPrice\r\n  endAt\r\n  endBlock\r\n  closePrice\r\n  totalBets\r\n  totalAmount\r\n  bullBets\r\n  bullAmount\r\n  bearBets\r\n  bearAmount\r\n  position\r\n`\r\n\r\nexport const getBetBaseFields = () => `\r\n  id\r\n  hash  \r\n  amount\r\n  position\r\n  claimed\r\n  claimedHash\r\n`\r\n\r\nexport const getUserBaseFields = () => `\r\n  id\r\n  address\r\n  block\r\n  totalBets\r\n  totalBNB\r\n`\r\n","import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    token: tokens.syrup,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 251,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 252,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  /**\r\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\r\n   */\r\n  {\r\n    pid: 343,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\r\n    },\r\n    token: tokens.oddz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 409,\r\n    lpSymbol: 'ETH-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.usdc,\r\n  },\r\n  {\r\n    pid: 408,\r\n    lpSymbol: 'BTCB-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 347,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\r\n    },\r\n    token: tokens.bondly,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 407,\r\n    lpSymbol: 'MARSH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\r\n    },\r\n    token: tokens.marsh,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 406,\r\n    lpSymbol: 'BORING-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\r\n    },\r\n    token: tokens.boring,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 405,\r\n    lpSymbol: 'MBOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n    },\r\n    token: tokens.mbox,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 404,\r\n    lpSymbol: 'ATA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\r\n    },\r\n    token: tokens.ata,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 403,\r\n    lpSymbol: 'MX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\r\n    },\r\n    token: tokens.mx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 402,\r\n    lpSymbol: 'bCFX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\r\n    },\r\n    token: tokens.bcfx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 401,\r\n    lpSymbol: 'QKC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\r\n    },\r\n    token: tokens.qkc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 400,\r\n    lpSymbol: 'KTN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\r\n    },\r\n    token: tokens.ktn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 399,\r\n    lpSymbol: 'MTRG-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\r\n    },\r\n    token: tokens.mtrg,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 398,\r\n    lpSymbol: 'SWG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\r\n    },\r\n    token: tokens.swg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 397,\r\n    lpSymbol: 'TUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\r\n    },\r\n    token: tokens.tusd,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 396,\r\n    lpSymbol: 'VRT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\r\n    },\r\n    token: tokens.vrt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 395,\r\n    lpSymbol: 'EZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\r\n    },\r\n    token: tokens.ez,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 394,\r\n    lpSymbol: 'KALM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\r\n    },\r\n    token: tokens.kalm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 393,\r\n    lpSymbol: 'pOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\r\n    },\r\n    token: tokens.popen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 335,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\r\n    },\r\n    token: tokens.lien,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 392,\r\n    lpSymbol: 'WELL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\r\n    },\r\n    token: tokens.well,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 391,\r\n    lpSymbol: 'DERI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\r\n    },\r\n    token: tokens.deri,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 390,\r\n    lpSymbol: 'CHR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\r\n    },\r\n    token: tokens.chr,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 389,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 388,\r\n    lpSymbol: 'CYC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\r\n    },\r\n    token: tokens.cyc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 387,\r\n    lpSymbol: 'XEND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\r\n    },\r\n    token: tokens.xend,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 296,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\r\n    },\r\n    token: tokens.hget,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 386,\r\n    lpSymbol: 'HOTCROSS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\r\n    },\r\n    token: tokens.hotcross,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 385,\r\n    lpSymbol: 'RFOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\r\n    },\r\n    token: tokens.rfox,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 384,\r\n    lpSymbol: 'WMASS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\r\n    },\r\n    token: tokens.wmass,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 383,\r\n    lpSymbol: 'UBXT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\r\n    },\r\n    token: tokens.ubxt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 381,\r\n    lpSymbol: 'BTR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\r\n    },\r\n    token: tokens.btr,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 380,\r\n    lpSymbol: 'τDOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\r\n    },\r\n    token: tokens.τdoge,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 379,\r\n    lpSymbol: 'PMON-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\r\n    },\r\n    token: tokens.pmon,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 378,\r\n    lpSymbol: 'ONE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\r\n    },\r\n    token: tokens.one,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 377,\r\n    lpSymbol: 'FINE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\r\n    },\r\n    token: tokens.fine,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 376,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\r\n    },\r\n    token: tokens.doge,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 310,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\r\n    },\r\n    token: tokens.bmxx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 375,\r\n    lpSymbol: 'OIN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\r\n    },\r\n    token: tokens.oin,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 374,\r\n    lpSymbol: 'HYFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\r\n    },\r\n    token: tokens.hyfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 373,\r\n    lpSymbol: 'KUN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\r\n    },\r\n    token: tokens.kun,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 372,\r\n    lpSymbol: 'KUN-QSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\r\n    },\r\n    token: tokens.kun,\r\n    quoteToken: tokens.qsd,\r\n  },\r\n  {\r\n    pid: 371,\r\n    lpSymbol: 'MATH-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\r\n    },\r\n    token: tokens.math,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 370,\r\n    lpSymbol: 'mCOIN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\r\n    },\r\n    token: tokens.mcoin,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 369,\r\n    lpSymbol: 'WIN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\r\n    },\r\n    token: tokens.win,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 368,\r\n    lpSymbol: 'TRX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\r\n    },\r\n    token: tokens.trx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 367,\r\n    lpSymbol: 'BTT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\r\n    },\r\n    token: tokens.btt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 366,\r\n    lpSymbol: 'PNT-pBTC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\r\n    },\r\n    token: tokens.pnt,\r\n    quoteToken: tokens.pbtc,\r\n  },\r\n  {\r\n    pid: 311,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\r\n    },\r\n    token: tokens.xmark,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 365,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 364,\r\n    lpSymbol: 'LMT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\r\n    },\r\n    token: tokens.lmt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 363,\r\n    lpSymbol: 'DFD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\r\n    },\r\n    token: tokens.dfd,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 362,\r\n    lpSymbol: 'ALPACA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\r\n    },\r\n    token: tokens.alpaca,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 361,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\r\n    },\r\n    token: tokens.τbtc,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 304,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\r\n    },\r\n    token: tokens.swingby,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 360,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\r\n    },\r\n    token: tokens.xed,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 359,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\r\n    },\r\n    token: tokens.hakka,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 358,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\r\n    },\r\n    token: tokens.cgg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 357,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\r\n    },\r\n    token: tokens.suter,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 356,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 355,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\r\n    },\r\n    token: tokens.hzn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 354,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\r\n    },\r\n    token: tokens.alpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 353,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\r\n    },\r\n    token: tokens.perl,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 352,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\r\n    },\r\n    token: tokens.tlm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 351,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\r\n    },\r\n    token: tokens.jgn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 350,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\r\n    },\r\n    token: tokens.eps,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 349,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\r\n    },\r\n    token: tokens.arpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 348,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\r\n    },\r\n    token: tokens.itam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 346,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\r\n    },\r\n    token: tokens.tko,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 345,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\r\n    },\r\n    token: tokens.apys,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 344,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\r\n    },\r\n    token: tokens.hoo,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 342,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\r\n    },\r\n    token: tokens.easy,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 341,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\r\n    },\r\n    token: tokens.nrv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 340,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\r\n    },\r\n    token: tokens.dego,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 339,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\r\n    },\r\n    token: tokens.gum,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 338,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\r\n    },\r\n    token: tokens.pbtc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 337,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\r\n    },\r\n    token: tokens.dft,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 336,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\r\n    },\r\n    token: tokens.swth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 334,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\r\n    },\r\n    token: tokens.zil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 333,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\r\n    },\r\n    token: tokens.pcws,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 332,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\r\n    },\r\n    token: tokens.bbadger,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 331,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\r\n    },\r\n    token: tokens.bdigg,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 330,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\r\n    },\r\n    token: tokens.lto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 329,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\r\n    },\r\n    token: tokens.mir,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 328,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\r\n    },\r\n    token: tokens.trade,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 327,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\r\n    },\r\n    token: tokens.dusk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 326,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\r\n    },\r\n    token: tokens.bifi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 325,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\r\n    },\r\n    token: tokens.txl,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 324,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\r\n    },\r\n    token: tokens.cos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 323,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\r\n    },\r\n    token: tokens.bunny,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 322,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\r\n    },\r\n    token: tokens.alice,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 321,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\r\n    },\r\n    token: tokens.for,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 320,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\r\n    },\r\n    token: tokens.bux,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 319,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 318,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\r\n    },\r\n    token: tokens.belt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 317,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\r\n    },\r\n    token: tokens.ramp,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 316,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\r\n    },\r\n    token: tokens.bfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 315,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\r\n    },\r\n    token: tokens.dexe,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 314,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\r\n    },\r\n    token: tokens.bel,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 313,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\r\n    },\r\n    token: tokens.tpt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 312,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\r\n    },\r\n    token: tokens.watch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 309,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\r\n    },\r\n    token: tokens.iotx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 308,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\r\n    },\r\n    token: tokens.bor,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 307,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\r\n    },\r\n    token: tokens.bopen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 306,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\r\n    },\r\n    token: tokens.sushi,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 305,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\r\n    },\r\n    token: tokens.dodo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 303,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\r\n    },\r\n    token: tokens.bry,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 302,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\r\n    },\r\n    token: tokens.zee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 301,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\r\n    },\r\n    token: tokens.swgb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 300,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\r\n    },\r\n    token: tokens.comp,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 299,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\r\n    },\r\n    token: tokens.sfp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 298,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\r\n    },\r\n    token: tokens.lina,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 297,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\r\n    },\r\n    token: tokens.lit,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 295,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\r\n    },\r\n    token: tokens.bdo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 294,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\r\n    },\r\n    token: tokens.egld,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 293,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\r\n    },\r\n    token: tokens.ust,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 292,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\r\n    },\r\n    token: tokens.mamzn,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 291,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\r\n    },\r\n    token: tokens.mgoogl,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 290,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\r\n    },\r\n    token: tokens.mnflx,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 289,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\r\n    },\r\n    token: tokens.mtsla,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 288,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\r\n    },\r\n    token: tokens.wsote,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 287,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\r\n    },\r\n    token: tokens.front,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 286,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\r\n    },\r\n    token: tokens.helmet,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 285,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\r\n    },\r\n    token: tokens.btcst,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 284,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\r\n    },\r\n    token: tokens.ltc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 283,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 282,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 281,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\r\n    },\r\n    token: tokens.bscx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 280,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\r\n    },\r\n    token: tokens.ten,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 279,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\r\n    },\r\n    token: tokens.balbt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 278,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\r\n    },\r\n    token: tokens.reef,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 277,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\r\n    },\r\n    token: tokens.ditto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 276,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\r\n    },\r\n    token: tokens.vai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 275,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\r\n    },\r\n    token: tokens.blink,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 274,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\r\n    },\r\n    token: tokens.unfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 273,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\r\n    },\r\n    token: tokens.hard,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 272,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\r\n    },\r\n    token: tokens.ctk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 271,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\r\n    },\r\n    token: tokens.sxp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 270,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\r\n    },\r\n    token: tokens.inj,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 269,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\r\n    },\r\n    token: tokens.fil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 268,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n    },\r\n    token: tokens.uni,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 267,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\r\n    },\r\n    token: tokens.yfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 266,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\r\n    },\r\n    token: tokens.atom,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 265,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\r\n    },\r\n    token: tokens.xrp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 264,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 263,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\r\n    },\r\n    token: tokens.alpha,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 262,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 261,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 260,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\r\n    },\r\n    token: tokens.xvs,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 259,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\r\n    },\r\n    token: tokens.twt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 258,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 257,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n    },\r\n    token: tokens.link,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 256,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\r\n    },\r\n    token: tokens.eos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 255,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 254,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\r\n    },\r\n    token: tokens.band,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 253,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n    },\r\n    token: tokens.ada,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  /**\r\n   * V2 farms, set to be removed once unstaked\r\n   */\r\n  {\r\n    pid: 139,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 250,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\r\n    },\r\n    token: tokens.τbtc,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 193,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\r\n    },\r\n    token: tokens.swingby,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 249,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\r\n    },\r\n    token: tokens.xed,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 248,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\r\n    },\r\n    token: tokens.hakka,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 247,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\r\n    },\r\n    token: tokens.cgg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 246,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\r\n    },\r\n    token: tokens.suter,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 245,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 244,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\r\n    },\r\n    token: tokens.hzn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 243,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\r\n    },\r\n    token: tokens.alpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 242,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\r\n    },\r\n    token: tokens.perl,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 241,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\r\n    },\r\n    token: tokens.tlm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 240,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\r\n    },\r\n    token: tokens.jgn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 239,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\r\n    },\r\n    token: tokens.eps,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 238,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\r\n    },\r\n    token: tokens.arpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 237,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\r\n    },\r\n    token: tokens.itam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 236,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\r\n    },\r\n    token: tokens.bondly,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 235,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\r\n    },\r\n    token: tokens.tko,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 234,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\r\n    },\r\n    token: tokens.apys,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 233,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\r\n    },\r\n    token: tokens.hoo,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 232,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\r\n    },\r\n    token: tokens.oddz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 231,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\r\n    },\r\n    token: tokens.easy,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 230,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\r\n    },\r\n    token: tokens.nrv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 229,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\r\n    },\r\n    token: tokens.dego,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 228,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\r\n    },\r\n    token: tokens.gum,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 227,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\r\n    },\r\n    token: tokens.pbtc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 226,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\r\n    },\r\n    token: tokens.dft,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 225,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\r\n    },\r\n    token: tokens.swth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 224,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\r\n    },\r\n    token: tokens.lien,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 223,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\r\n    },\r\n    token: tokens.zil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 222,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\r\n    },\r\n    token: tokens.pcws,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 221,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\r\n    },\r\n    token: tokens.bbadger,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 220,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\r\n    },\r\n    token: tokens.bdigg,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 219,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\r\n    },\r\n    token: tokens.lto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 218,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\r\n    },\r\n    token: tokens.mir,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 217,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\r\n    },\r\n    token: tokens.trade,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 216,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\r\n    },\r\n    token: tokens.dusk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 215,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\r\n    },\r\n    token: tokens.bifi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 214,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\r\n    },\r\n    token: tokens.txl,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 213,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\r\n    },\r\n    token: tokens.cos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 212,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\r\n    },\r\n    token: tokens.bunny,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 211,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\r\n    },\r\n    token: tokens.alice,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 210,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\r\n    },\r\n    token: tokens.for,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 209,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\r\n    },\r\n    token: tokens.bux,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 208,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 207,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\r\n    },\r\n    token: tokens.belt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 206,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\r\n    },\r\n    token: tokens.ramp,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 205,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\r\n    },\r\n    token: tokens.bfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 204,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\r\n    },\r\n    token: tokens.dexe,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 203,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\r\n    },\r\n    token: tokens.bel,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 202,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\r\n    },\r\n    token: tokens.tpt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 201,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\r\n    },\r\n    token: tokens.watch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 200,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\r\n    },\r\n    token: tokens.xmark,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 199,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\r\n    },\r\n    token: tokens.bmxx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 198,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\r\n    },\r\n    token: tokens.iotx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 197,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\r\n    },\r\n    token: tokens.bor,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 196,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\r\n    },\r\n    token: tokens.bopen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 195,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\r\n    },\r\n    token: tokens.sushi,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 194,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\r\n    },\r\n    token: tokens.dodo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 192,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\r\n    },\r\n    token: tokens.bry,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 191,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\r\n    },\r\n    token: tokens.zee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 190,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\r\n    },\r\n    token: tokens.swgb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 189,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\r\n    },\r\n    token: tokens.comp,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 188,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\r\n    },\r\n    token: tokens.sfp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 187,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\r\n    },\r\n    token: tokens.lina,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 186,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\r\n    },\r\n    token: tokens.lit,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 185,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\r\n    },\r\n    token: tokens.hget,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 184,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\r\n    },\r\n    token: tokens.bdo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 183,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\r\n    },\r\n    token: tokens.egld,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 182,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\r\n    },\r\n    token: tokens.ust,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 181,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\r\n    },\r\n    token: tokens.mamzn,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 180,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\r\n    },\r\n    token: tokens.mgoogl,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 179,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\r\n    },\r\n    token: tokens.mnflx,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 178,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\r\n    },\r\n    token: tokens.mtsla,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 177,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\r\n    },\r\n    token: tokens.wsote,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 176,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\r\n    },\r\n    token: tokens.front,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 175,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\r\n    },\r\n    token: tokens.helmet,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 174,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\r\n    },\r\n    token: tokens.btcst,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 173,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\r\n    },\r\n    token: tokens.ltc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 172,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 171,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 170,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\r\n    },\r\n    token: tokens.bscx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 169,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\r\n    },\r\n    token: tokens.ten,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 168,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\r\n    },\r\n    token: tokens.balbt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 167,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\r\n    },\r\n    token: tokens.reef,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 166,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\r\n    },\r\n    token: tokens.ditto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 165,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\r\n    },\r\n    token: tokens.vai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 164,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\r\n    },\r\n    token: tokens.blink,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 163,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\r\n    },\r\n    token: tokens.unfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 162,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\r\n    },\r\n    token: tokens.hard,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 161,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\r\n    },\r\n    token: tokens.ctk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 160,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\r\n    },\r\n    token: tokens.sxp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 159,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\r\n    },\r\n    token: tokens.inj,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 158,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\r\n    },\r\n    token: tokens.fil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 157,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\r\n    },\r\n    token: tokens.uni,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 156,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\r\n    },\r\n    token: tokens.yfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 155,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\r\n    },\r\n    token: tokens.yfii,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 154,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\r\n    },\r\n    token: tokens.atom,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 153,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\r\n    },\r\n    token: tokens.xrp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 152,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 151,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\r\n    },\r\n    token: tokens.alpha,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 150,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 149,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 148,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\r\n    },\r\n    token: tokens.xvs,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 147,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\r\n    },\r\n    token: tokens.twt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 146,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 145,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\r\n    },\r\n    token: tokens.link,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 144,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\r\n    },\r\n    token: tokens.eos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 143,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 142,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x473390697036E7611a670575eA9141583471fF47',\r\n    },\r\n    token: tokens.band,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 141,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\r\n    },\r\n    token: tokens.ada,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 140,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  /**\r\n   * All farms below here are from v1 and are to be set to 0x\r\n   */\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 136,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\r\n    },\r\n    token: tokens.τbtc,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 76,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\r\n    },\r\n    token: tokens.swingby,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 135,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\r\n    },\r\n    token: tokens.xed,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 134,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\r\n    },\r\n    token: tokens.hakka,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 133,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\r\n    },\r\n    token: tokens.cgg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 132,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\r\n    },\r\n    token: tokens.suter,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 131,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 130,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\r\n    },\r\n    token: tokens.hzn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 129,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\r\n    },\r\n    token: tokens.alpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 128,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\r\n    },\r\n    token: tokens.perl,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 127,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\r\n    },\r\n    token: tokens.tlm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 125,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\r\n    },\r\n    token: tokens.jgn,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 124,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\r\n    },\r\n    token: tokens.eps,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 123,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\r\n    },\r\n    token: tokens.arpa,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 122,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\r\n    },\r\n    token: tokens.itam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 121,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\r\n    },\r\n    token: tokens.bondly,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 120,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\r\n    },\r\n    token: tokens.tko,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 119,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\r\n    },\r\n    token: tokens.apys,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 118,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\r\n    },\r\n    token: tokens.hoo,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 117,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\r\n    },\r\n    token: tokens.oddz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 116,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\r\n    },\r\n    token: tokens.easy,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 115,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\r\n    },\r\n    token: tokens.nrv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 114,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\r\n    },\r\n    token: tokens.dego,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 113,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\r\n    },\r\n    token: tokens.gum,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 112,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\r\n    },\r\n    token: tokens.pbtc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 111,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\r\n    },\r\n    token: tokens.dft,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 110,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\r\n    },\r\n    token: tokens.swth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 109,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\r\n    },\r\n    token: tokens.lien,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 108,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\r\n    },\r\n    token: tokens.zil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 107,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\r\n    },\r\n    token: tokens.pcws,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 106,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\r\n    },\r\n    token: tokens.bbadger,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 104,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\r\n    },\r\n    token: tokens.bdigg,\r\n    quoteToken: tokens.btcb,\r\n  },\r\n  {\r\n    pid: 103,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\r\n    },\r\n    token: tokens.lto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 102,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\r\n    },\r\n    token: tokens.mir,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 101,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\r\n    },\r\n    token: tokens.trade,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 100,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\r\n    },\r\n    token: tokens.dusk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 99,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\r\n    },\r\n    token: tokens.bifi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 98,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\r\n    },\r\n    token: tokens.txl,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 97,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\r\n    },\r\n    token: tokens.cos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 96,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\r\n    },\r\n    token: tokens.bunny,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 95,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\r\n    },\r\n    token: tokens.alice,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 94,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\r\n    },\r\n    token: tokens.for,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 93,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\r\n    },\r\n    token: tokens.bux,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 92,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 91,\r\n    lpSymbol: 'NULS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\r\n    },\r\n    token: tokens.nuls,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 90,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\r\n    },\r\n    token: tokens.belt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 89,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\r\n    },\r\n    token: tokens.ramp,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 88,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\r\n    },\r\n    token: tokens.bfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 87,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\r\n    },\r\n    token: tokens.dexe,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 86,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\r\n    },\r\n    token: tokens.bel,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 85,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\r\n    },\r\n    token: tokens.tpt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 84,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\r\n    },\r\n    token: tokens.watch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 83,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\r\n    },\r\n    token: tokens.xmark,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 82,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\r\n    },\r\n    token: tokens.bmxx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 81,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\r\n    },\r\n    token: tokens.iotx,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 80,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\r\n    },\r\n    token: tokens.bor,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 79,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\r\n    },\r\n    token: tokens.bopen,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 78,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\r\n    },\r\n    token: tokens.sushi,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 77,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\r\n    },\r\n    token: tokens.dodo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 75,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\r\n    },\r\n    token: tokens.bry,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 74,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\r\n    },\r\n    token: tokens.zee,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 73,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\r\n    },\r\n    token: tokens.swgb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 72,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\r\n    },\r\n    token: tokens.comp,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 71,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\r\n    },\r\n    token: tokens.sfp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 70,\r\n    lpSymbol: 'BETH-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\r\n    },\r\n    token: tokens.beth,\r\n    quoteToken: tokens.eth,\r\n  },\r\n  {\r\n    pid: 69,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\r\n    },\r\n    token: tokens.lina,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 68,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\r\n    },\r\n    token: tokens.lit,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 67,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\r\n    },\r\n    token: tokens.hget,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 66,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\r\n    },\r\n    token: tokens.bdo,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 65,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\r\n    },\r\n    token: tokens.egld,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 63,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\r\n    },\r\n    token: tokens.ust,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 62,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\r\n    },\r\n    token: tokens.mamzn,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 61,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\r\n    },\r\n    token: tokens.mgoogl,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 60,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\r\n    },\r\n    token: tokens.mnflx,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 59,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\r\n    },\r\n    token: tokens.mtsla,\r\n    quoteToken: tokens.ust,\r\n  },\r\n  {\r\n    pid: 58,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\r\n    },\r\n    token: tokens.wsote,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 57,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\r\n    },\r\n    token: tokens.front,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 56,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\r\n    },\r\n    token: tokens.helmet,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 55,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\r\n    },\r\n    token: tokens.btcst,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 54,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\r\n    },\r\n    token: tokens.ltc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 53,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 52,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 51,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\r\n    },\r\n    token: tokens.bscx,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 50,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\r\n    },\r\n    token: tokens.ten,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 49,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\r\n    },\r\n    token: tokens.balbt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 46,\r\n    lpSymbol: 'OG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\r\n    },\r\n    token: tokens.og,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 47,\r\n    lpSymbol: 'ASR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\r\n    },\r\n    token: tokens.asr,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 48,\r\n    lpSymbol: 'ATM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\r\n    },\r\n    token: tokens.atm,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 45,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\r\n    },\r\n    token: tokens.reef,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 44,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\r\n    },\r\n    token: tokens.ditto,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 43,\r\n    lpSymbol: 'JUV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\r\n    },\r\n    token: tokens.juv,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 42,\r\n    lpSymbol: 'PSG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\r\n    },\r\n    token: tokens.psg,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 39,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\r\n    },\r\n    token: tokens.unfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 41,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\r\n    },\r\n    token: tokens.vai,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 40,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\r\n    },\r\n    token: tokens.blink,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 37,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\r\n    },\r\n    token: tokens.hard,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\r\n    },\r\n    token: tokens.ada,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\r\n    },\r\n    token: tokens.band,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\r\n    },\r\n    token: tokens.eos,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\r\n    },\r\n    token: tokens.link,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 12,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\r\n    },\r\n    token: tokens.twt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 13,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\r\n    },\r\n    token: tokens.xvs,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 14,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\r\n    },\r\n    token: tokens.eth,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\r\n    },\r\n    token: tokens.btcb,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\r\n    },\r\n    token: tokens.alpha,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\r\n    },\r\n    token: tokens.xrp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\r\n    },\r\n    token: tokens.atom,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\r\n    },\r\n    token: tokens.yfii,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'DAI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\r\n    },\r\n    token: tokens.dai,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    lpSymbol: 'XTZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\r\n    },\r\n    token: tokens.xtz,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 23,\r\n    lpSymbol: 'BCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\r\n    },\r\n    token: tokens.bch,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 24,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\r\n    },\r\n    token: tokens.yfi,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 25,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\r\n    },\r\n    token: tokens.uni,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 26,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\r\n    },\r\n    token: tokens.fil,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 27,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\r\n    },\r\n    token: tokens.inj,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 29,\r\n    lpSymbol: 'USDC-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 30,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\r\n    },\r\n    token: tokens.sxp,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 32,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\r\n    },\r\n    token: tokens.ctk,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 34,\r\n    lpSymbol: 'STAX-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\r\n    },\r\n    token: tokens.stax,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 35,\r\n    lpSymbol: 'NAR-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\r\n    },\r\n    token: tokens.nar,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 36,\r\n    lpSymbol: 'NYA-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\r\n    },\r\n    token: tokens.nya,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 38,\r\n    lpSymbol: 'bROOBEE-CAKE LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\r\n    },\r\n    token: tokens.broobee,\r\n    quoteToken: tokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'BAKE-BNB Bakery LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\r\n    },\r\n    token: tokens.bake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'BURGER-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\r\n    },\r\n    token: tokens.burger,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'BAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\r\n    },\r\n    token: tokens.bake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default farms\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-right: 0px;\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { MenuEntry } from '@pancakeswap/uikit'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\n\r\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\r\n  {\r\n    label: t('Home'),\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: t('Trade'),\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'LP Migration',\r\n        href: 'https://excahnge-ppmm.herokuapp.com/#/migrate',\r\n      },\r\n      {\r\n        label: 'V1 Liquidity (Old)',\r\n        href: 'https://excahnge-ppmm.herokuapp.com/#/pool',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('Farms'),\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: t('Pools'),\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: t('Prediction (BETA)'),\r\n    icon: 'PredictionsIcon',\r\n    href: '/prediction',\r\n  },\r\n  {\r\n    label: t('Lottery'),\r\n    icon: 'TicketIcon',\r\n    href: '/lottery',\r\n  },\r\n  {\r\n    label: t('Collectibles'),\r\n    icon: 'NftIcon',\r\n    href: '/collectibles',\r\n  },\r\n  {\r\n    label: t('Team Battle'),\r\n    icon: 'TeamBattleIcon',\r\n    href: '/competition',\r\n  },\r\n  {\r\n    label: t('Teams & Profile'),\r\n    icon: 'GroupsIcon',\r\n    items: [\r\n      {\r\n        label: t('Leaderboard'),\r\n        href: '/teams',\r\n      },\r\n      {\r\n        label: t('Task Center'),\r\n        href: '/profile/tasks',\r\n      },\r\n      {\r\n        label: t('Your Profile'),\r\n        href: '/profile',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('Info'),\r\n    icon: 'InfoIcon',\r\n    items: [\r\n      {\r\n        label: t('Overview'),\r\n        href: 'https://pancakeswap.info',\r\n      },\r\n      {\r\n        label: t('Tokens'),\r\n        href: 'https://pancakeswap.info/tokens',\r\n      },\r\n      {\r\n        label: t('Pairs'),\r\n        href: 'https://pancakeswap.info/pairs',\r\n      },\r\n      {\r\n        label: t('Accounts'),\r\n        href: 'https://pancakeswap.info/accounts',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('IFO'),\r\n    icon: 'IfoIcon',\r\n    href: '/ifo',\r\n  },\r\n  {\r\n    label: t('More'),\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: t('Contact'),\r\n        href: 'https://docs.pancakeswap.finance/contact-us',\r\n      },\r\n      {\r\n        label: t('Voting'),\r\n        href: 'https://voting.pancakeswap.finance',\r\n      },\r\n      {\r\n        label: t('Github'),\r\n        href: 'https://github.com/pancakeswap',\r\n      },\r\n      {\r\n        label: t('Docs'),\r\n        href: 'https://docs.pancakeswap.finance',\r\n      },\r\n      {\r\n        label: t('Blog'),\r\n        href: 'https://pancakeswap.medium.com',\r\n      },\r\n      {\r\n        label: t('Merch'),\r\n        href: 'https://pancakeswap.creator-spring.com/',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { profile } = useProfile()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      profile={{\r\n        username: profile?.username,\r\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n        profileLink: '/profile',\r\n        noProfileLink: '/profile',\r\n        showPip: !profile?.username,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport { ToastContainer } from '@pancakeswap/uikit'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import React from 'react'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { Pool } from 'state/types'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { getAprData } from 'views/Pools/helpers'\r\n\r\ninterface AprRowProps {\r\n  pool: Pool\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink =\r\n    stakingToken.address &&\r\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            bold\r\n          />\r\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import styled, { css, keyframes } from 'styled-components'\r\nimport { Card, Box } from '@pancakeswap/uikit'\r\n\r\nconst PromotedGradient = keyframes`\r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\ninterface PromotedStyleCardProps {\r\n  isDesktop: boolean\r\n}\r\n\r\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\r\n  max-width: 352px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\r\n\r\n  ${({ isPromoted, theme }) =>\r\n    isPromoted\r\n      ? css`\r\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\r\n          padding: 1px 1px 3px 1px;\r\n          background-size: 400% 400%;\r\n        `\r\n      : `background: ${(props) => props.theme.card.background};`}\r\n\r\n  ${({ isPromoted }) =>\r\n    isPromoted &&\r\n    isPromoted.isDesktop &&\r\n    css`\r\n      animation: ${PromotedGradient} 3s ease infinite;\r\n    `}\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport const StyledCardInner = styled(Box)`\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n`\r\n\r\nexport default StyledCard\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: Pool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const { stakingToken, earningToken, totalStaked, contractAddress, sousId, isAutoVault } = pool\r\n\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\r\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked ? (\r\n            <>\r\n              <Balance fontSize=\"14px\" value={getTotalStakedBalance()} />\r\n              <Text ml=\"4px\" fontSize=\"14px\">\r\n                {stakingToken.symbol}\r\n              </Text>\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\r\n          <Flex alignItems=\"center\">\r\n            {blocksRemaining || blocksUntilStart ? (\r\n              <Balance color=\"primary\" fontSize=\"14px\" value={blocksToDisplay} decimals={0} />\r\n            ) : (\r\n              <Skeleton width=\"54px\" height=\"21px\" />\r\n            )}\r\n            <Text ml=\"4px\" color=\"primary\" small textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      {isAutoVault && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText ref={targetRef} small>\r\n            {t('Performance Fee')}\r\n          </TooltipText>\r\n          <Flex alignItems=\"center\">\r\n            <Text ml=\"4px\" small>\r\n              {performanceFee / 100}%\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal\r\n            bold={false}\r\n            small\r\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n          >\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to Metamask')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: Pool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningTokenSymbol: string\r\n  stakingTokenSymbol: string\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningTokenSymbol, stakingTokenSymbol, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const poolImageSrc = isAutoVault\r\n    ? `cake-cakevault.svg`\r\n    : `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\r\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn CAKE, stake CAKE')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={64} height={64} />\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { Pool } from 'state/types'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: Pool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap/uikit'\r\n\r\ninterface PercentageButtonProps {\r\n  onClick: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PercentageButton\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport PercentageButton from './PercentageButton'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n\r\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      try {\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      try {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href={BASE_EXCHANGE_URL}>\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from 'config/constants/types'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: string\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\r\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  isLoading = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = sousId === 0\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningsDollarValue}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" mb=\"16px\">\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          {isLoading ? (\r\n            <Skeleton width=\"80px\" height=\"48px\" />\r\n          ) : (\r\n            <>\r\n              {hasEarnings ? (\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n              ) : (\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n              )}\r\n              {earningTokenPrice !== 0 && (\r\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\r\n                  ~\r\n                  {hasEarnings ? (\r\n                    <Balance\r\n                      display=\"inline\"\r\n                      fontSize=\"12px\"\r\n                      color=\"textSubtle\"\r\n                      decimals={2}\r\n                      value={earningTokenDollarBalance}\r\n                      unit=\" USD\"\r\n                    />\r\n                  ) : (\r\n                    '0 USD'\r\n                  )}\r\n                </Text>\r\n              )}\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Flex>\r\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n            {isCompoundPool ? t('Collect') : t('Harvest')}\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: Pool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from './AprRow'\r\nimport { StyledCard, StyledCardInner } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n\r\n  return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\r\n    >\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasStakedBalance}\r\n          earningTokenSymbol={earningToken.symbol}\r\n          stakingTokenSymbol={stakingToken.symbol}\r\n          isFinished={isFinished && sousId !== 0}\r\n        />\r\n        <CardBody>\r\n          <AprRow pool={pool} />\r\n          <Flex mt=\"24px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </CardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from 'hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\r\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\r\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\r\n\r\n  useEffect(() => {\r\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\r\n    const secondsRemainingCalc = feeEndTime - currentSeconds\r\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\r\n\r\n    const tick = () => {\r\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\r\n    }\r\n    const timerInterval = setInterval(() => tick(), 1000)\r\n    if (doesUnstakingFeeApply) {\r\n      setSecondsRemaining(secondsRemainingCalc)\r\n      setHasUnstakingFee(true)\r\n    } else {\r\n      setHasUnstakingFee(false)\r\n      clearInterval(timerInterval)\r\n    }\r\n\r\n    return () => clearInterval(timerInterval)\r\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\r\n\r\n  return { hasUnstakingFee, secondsRemaining }\r\n}\r\n\r\nexport default useWithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\r\n  const { t } = useTranslation()\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\r\n}\r\n\r\nexport default WithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\r\n\r\ninterface UnstakingFeeCountdownRowProps {\r\n  isTableVariant?: boolean\r\n}\r\n\r\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    fees: { withdrawalFee, withdrawalFeePeriod },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100 || '-'\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\r\n    parseInt(lastDepositedTime, 10),\r\n    userShares,\r\n    withdrawalFeePeriod,\r\n  )\r\n\r\n  // The user has made a deposit, but has no fee\r\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\r\n\r\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\r\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\r\n\r\n  const getRowText = () => {\r\n    if (noFeeToPay) {\r\n      return t('Unstaking Fee').toLowerCase()\r\n    }\r\n    if (shouldShowTimer) {\r\n      return t('unstaking fee until')\r\n    }\r\n    return t('unstaking fee if withdrawn within 72h')\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\r\n      justifyContent=\"space-between\"\r\n      flexDirection={isTableVariant ? 'column' : 'row'}\r\n    >\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\r\n      </TooltipText>\r\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UnstakingFeeCountdownRow\r\n","import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchCakeVaultUserData } from 'state/pools'\r\nimport { Pool } from 'state/types'\r\nimport { convertCakeToShares } from '../../helpers'\r\nimport FeeSummary from './FeeSummary'\r\n\r\ninterface VaultStakeModalProps {\r\n  pool: Pool\r\n  stakingMax: BigNumber\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\r\n  const dispatch = useAppDispatch()\r\n  const { stakingToken } = pool\r\n  const { account } = useWeb3React()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [percent, setPercent] = useState(0)\r\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const usdValueStaked =\r\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\r\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\r\n      setPercent(percentage > 100 ? 100 : percentage)\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\r\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\r\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\r\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\r\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\r\n\r\n    if (isWithdrawingAll) {\r\n      cakeVaultContract.methods\r\n        .withdrawAll()\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setPendingTx(true)\r\n        })\r\n        .on('receipt', () => {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        })\r\n        .on('error', (error) => {\r\n          console.error(error)\r\n          // Remove message from toast before prod\r\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\r\n          setPendingTx(false)\r\n        })\r\n    } else {\r\n      cakeVaultContract.methods\r\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\r\n        // .toString() being called to fix a BigNumber error in prod\r\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setPendingTx(true)\r\n        })\r\n        .on('receipt', () => {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        })\r\n        .on('error', (error) => {\r\n          console.error(error)\r\n          // Remove message from toast before prod\r\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\r\n          setPendingTx(false)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\r\n    cakeVaultContract.methods\r\n      .deposit(convertedStakeAmount.toString())\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setPendingTx(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\r\n        setPendingTx(false)\r\n        onDismiss()\r\n        dispatch(fetchCakeVaultUserData({ account }))\r\n      })\r\n      .on('error', (error) => {\r\n        console.error(error)\r\n        // Remove message from toast before prod\r\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\r\n        setPendingTx(false)\r\n      })\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n    setPendingTx(true)\r\n    // unstaking\r\n    if (isRemovingStake) {\r\n      handleWithdrawal(convertedStakeAmount)\r\n      // staking\r\n    } else {\r\n      handleDeposit(convertedStakeAmount)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\r\n          25%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\r\n          50%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\r\n          75%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\r\n          {t('Max')}\r\n        </StyledButton>\r\n      </Flex>\r\n      {isRemovingStake && hasUnstakingFee && (\r\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\r\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VaultStakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: Pool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: Pool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasSharesStaked}\r\n          isAutoVault\r\n          earningTokenSymbol=\"CAKE\"\r\n          stakingTokenSymbol=\"CAKE\"\r\n        />\r\n        <StyledCardBody isLoading={isLoading}>\r\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n          <Box mt=\"24px\">\r\n            <RecentCakeProfitRow />\r\n          </Box>\r\n          <Box mt=\"8px\">\r\n            <UnstakingFeeCountdownRow />\r\n          </Box>\r\n          <Flex mt=\"32px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </StyledCardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","import React from 'react'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport {\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  Toggle,\r\n  Text,\r\n  Flex,\r\n  NotificationDot,\r\n  useMatchBreakpoints,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { t } = useTranslation()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n      <ButtonMenuItem as={Link} to={`${url}`}>\r\n        {t('Live')}\r\n      </ButtonMenuItem>\r\n      <NotificationDot show={hasStakeInFinishedPools}>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {t('Finished')}\r\n        </ButtonMenuItem>\r\n      </NotificationDot>\r\n    </ButtonMenu>\r\n  )\r\n\r\n  const stakedOnlySwitch = (\r\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\r\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\r\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\r\n    </Flex>\r\n  )\r\n\r\n  if (isXs || isSm) {\r\n    return (\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\r\n        <Flex width=\"100%\" justifyContent=\"space-between\">\r\n          {viewModeToggle}\r\n          {liveOrFinishedSwitch}\r\n        </Flex>\r\n        {stakedOnlySwitch}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      justifyContent={['space-around', 'space-around', 'flex-start']}\r\n      mb={['24px', '24px', '24px', '0px']}\r\n    >\r\n      {viewModeToggle}\r\n      {liveOrFinishedSwitch}\r\n      {stakedOnlySwitch}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { DEFAULT_GAS_LIMIT } from 'config'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface BountyModalProps {\r\n  cakeBountyToDisplay: number\r\n  dollarBountyToDisplay: number\r\n  totalPendingCakeHarvest: BigNumber\r\n  callFee: number\r\n  onDismiss?: () => void\r\n  TooltipComponent: React.ElementType\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst BountyModal: React.FC<BountyModalProps> = ({\r\n  cakeBountyToDisplay,\r\n  dollarBountyToDisplay,\r\n  totalPendingCakeHarvest,\r\n  callFee,\r\n  onDismiss,\r\n  TooltipComponent,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const callFeeAsDecimal = callFee / 100\r\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\r\n    placement: 'bottom',\r\n    tooltipPadding: { right: 15 },\r\n  })\r\n\r\n  const handleConfirmClick = async () => {\r\n    cakeVaultContract.methods\r\n      .harvest()\r\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n      .on('sending', () => {\r\n        setPendingTx(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        console.error(error)\r\n        toastError(\r\n          t('Could not be collected'),\r\n          t('There may be an issue with your transaction, or another user claimed the bounty first.'),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      {tooltipVisible && tooltip}\r\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        <Text>{t('You’ll claim')}</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              color=\"textSubtle\"\r\n              value={dollarBountyToDisplay}\r\n              decimals={2}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Divider />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Pool total pending yield')}\r\n        </Text>\r\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Bounty')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {callFeeAsDecimal}%\r\n        </Text>\r\n      </Flex>\r\n      {account ? (\r\n        <Button\r\n          isLoading={pendingTx}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          onClick={handleConfirmClick}\r\n          mb=\"28px\"\r\n        >\r\n          {t('Confirm')}\r\n        </Button>\r\n      ) : (\r\n        <UnlockButton mb=\"28px\" />\r\n      )}\r\n      <Flex justifyContent=\"center\" alignItems=\"center\">\r\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n          {t('What’s this?')}\r\n        </Text>\r\n        <span ref={targetRef}>\r\n          <HelpIcon color=\"textSubtle\" />\r\n        </span>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BountyModal\r\n","import React, { useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Text,\r\n  Flex,\r\n  HelpIcon,\r\n  Button,\r\n  Heading,\r\n  Skeleton,\r\n  useModal,\r\n  Box,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport BountyModal from './BountyModal'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  flex: 1;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 240px;\r\n  }\r\n`\r\n\r\nconst BountyCard = () => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const TooltipComponent = () => (\r\n    <>\r\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\r\n      <Text mb=\"16px\">\r\n        {t(\r\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\r\n        )}\r\n      </Text>\r\n      <Text style={{ fontWeight: 'bold' }}>\r\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: callFee / 100 })}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  const [onPresentBountyModal] = useModal(\r\n    <BountyModal\r\n      cakeBountyToDisplay={cakeBountyToDisplay}\r\n      dollarBountyToDisplay={dollarBountyToDisplay}\r\n      totalPendingCakeHarvest={totalPendingCakeHarvest}\r\n      callFee={callFee}\r\n      TooltipComponent={TooltipComponent}\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\r\n    placement: 'bottom-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <StyledCard>\r\n        <CardBody>\r\n          <Flex flexDirection=\"column\">\r\n            <Flex alignItems=\"center\" mb=\"12px\">\r\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n                {t('Auto CAKE Bounty')}\r\n              </Text>\r\n              <Box ref={targetRef}>\r\n                <HelpIcon color=\"textSubtle\" />\r\n              </Box>\r\n            </Flex>\r\n          </Flex>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Flex flexDirection=\"column\" mr=\"12px\">\r\n              <Heading>\r\n                {hasFetchedCakeBounty ? (\r\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\r\n                ) : (\r\n                  <Skeleton height={20} width={96} mb=\"2px\" />\r\n                )}\r\n              </Heading>\r\n              {hasFetchedDollarBounty ? (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  value={dollarBountyToDisplay}\r\n                  decimals={2}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              ) : (\r\n                <Skeleton height={16} width={62} />\r\n              )}\r\n            </Flex>\r\n            <Button\r\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n              onClick={onPresentBountyModal}\r\n              scale=\"sm\"\r\n            >\r\n              {t('Claim')}\r\n            </Button>\r\n          </Flex>\r\n        </CardBody>\r\n      </StyledCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BountyCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ButtonText = styled(Text)`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin-right: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst HelpButton = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\r\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\r\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\r\n          {t('Help')}\r\n        </ButtonText>\r\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\r\n      </Button>\r\n    </StyledLink>\r\n  )\r\n}\r\n\r\nexport default HelpButton\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, Image, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n  const iconFile = `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto CAKE')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual CAKE')\r\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto CAKE vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningsDollarValue}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            {tooltipVisible && tooltip}\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isXs && !isSm}\r\n                  fontSize={isXs || isSm ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\r\n                    decimals={2}\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                    prefix=\"~\"\r\n                  />\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\r\n                <HelpIconWrapper ref={targetRef}>\r\n                  <HelpIcon color=\"textSubtle\" />\r\n                </HelpIconWrapper>\r\n              )}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport { Flex, useModal, CalculateIcon, IconButton, Skeleton, FlexProps } from '@pancakeswap/uikit'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAprData } from 'views/Pools/helpers'\r\n\r\ninterface AprProps extends FlexProps {\r\n  pool: Pool\r\n  showIcon: boolean\r\n  performanceFee?: number\r\n}\r\n\r\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\r\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\r\n  const { t } = useTranslation()\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink =\r\n    stakingToken.address &&\r\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <>\r\n          <Flex>\r\n            <Balance\r\n              onClick={openRoiModal}\r\n              fontSize=\"16px\"\r\n              isDisabled={isFinished}\r\n              value={isFinished ? 0 : earningsPercentageToDisplay}\r\n              decimals={2}\r\n              unit=\"%\"\r\n            />\r\n          </Flex>\r\n          {!isFinished && showIcon && (\r\n            <Flex>\r\n              <IconButton\r\n                onClick={openRoiModal}\r\n                variant=\"text\"\r\n                width=\"20px\"\r\n                height=\"20px\"\r\n                mr={['-14px', '-14px', '0px']}\r\n              >\r\n                <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n              </IconButton>\r\n            </Flex>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Skeleton width=\"80px\" height=\"16px\" />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: Pool\r\n  performanceFee: number\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { isAutoVault } = pool\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {isAutoVault ? t('APY') : t('APR')}\r\n        </Text>\r\n        <Apr\r\n          pool={pool}\r\n          performanceFee={isAutoVault ? performanceFee : 0}\r\n          showIcon={!isXs && !isSm}\r\n          alignItems=\"flex-start\"\r\n        />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStakedBalance ? (\r\n          <Flex height=\"100%\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { Pool } from 'state/types'\r\nimport { useBlock } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link external href={getBscScanBlockCountdownUrl(endBlock)} onClick={(e) => e.stopPropagation()}>\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\r\n\r\ninterface HarvestActionProps extends Pool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  isAutoVault,\r\n  earningTokenPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto CAKE vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto CAKE vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    pricePerFullShare,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const displayBalance = hasEarnings ? earningTokenBalance : 0\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningsDollarValue}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = isAutoVault ? (\r\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n      {t('Recent CAKE profit')}\r\n    </Text>\r\n  ) : (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\r\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={displayBalance} />\r\n          {hasEarnings ? (\r\n            <Balance\r\n              display=\"inline\"\r\n              fontSize=\"12px\"\r\n              color={hasEarnings ? 'textSubtle' : 'textDisabled'}\r\n              decimals={2}\r\n              value={earningTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          ) : (\r\n            <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\r\n              0 USD\r\n            </Text>\r\n          )}\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\r\n            <UnstakingFeeCountdownRow isTableVariant />\r\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              {tooltipVisible && tooltip}\r\n              <TooltipText ref={targetRef} small>\r\n                {t('Performance Fee')}\r\n              </TooltipText>\r\n              <Flex alignItems=\"center\">\r\n                <Text ml=\"4px\" small>\r\n                  {performanceFee / 100}%\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Flex>\r\n        ) : (\r\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n            {isCompoundPool ? t('Collect') : t('Harvest')}\r\n          </Button>\r\n        )}\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_URL } from 'config'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const { sousId, stakingToken, earningToken, totalStaked, endBlock, stakingLimit, isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanBlockCountdownUrl(endBlock)}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}</Text>\r\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\r\n            {t('Info site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('Project site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\r\n          </Text>\r\n        )}\r\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\n\r\ninterface PoolRowProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\r\n        {isXl && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: Pool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { Pool } from 'state/types'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { ViewMode } from './components/ToggleView/ToggleView'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled(Flex)`\r\n  flex-direction: column;\r\n  margin-bottom: 24px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst SearchSortContainer = styled(Flex)`\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n\r\n  useEffect(() => {\r\n    const showMorePools = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: Pool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  const poolsToShow = () => {\r\n    let chosenPools = []\r\n    if (showFinishedPools) {\r\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n    } else {\r\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n    }\r\n\r\n    if (searchQuery) {\r\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n      chosenPools = chosenPools.filter((pool) =>\r\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n      )\r\n    }\r\n\r\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  }\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {poolsToShow().map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('Syrup Pools')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('Just stake some tokens to earn.')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('High APR, low risk.')}\r\n            </Heading>\r\n          </Flex>\r\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            <HelpButton />\r\n            <BountyCard />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <PoolControls justifyContent=\"space-between\">\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <SearchSortContainer>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </Flex>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n              </ControlStretch>\r\n            </Flex>\r\n          </SearchSortContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={loadMoreRef} />\r\n        <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src=\"/images/3d-syrup-bunnies.png\"\r\n          alt=\"Pancake illustration\"\r\n          width={192}\r\n          height={184.5}\r\n        />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport ToastListener from './components/ToastListener'\r\nimport PageLoader from './components/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport Pools from './views/Pools'\r\nimport history from './routerHistory'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\nconst Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Collectibles = lazy(() => import('./views/Collectibles'))\r\nconst Teams = lazy(() => import('./views/Teams'))\r\nconst Team = lazy(() => import('./views/Teams/Team'))\r\nconst Profile = lazy(() => import('./views/Profile'))\r\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\r\nconst Predictions = lazy(() => import('./views/Predictions'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  useFetchProfile()\r\n  usePollCoreFarmData()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            <Route path=\"/lottery\">\r\n              <Lottery />\r\n            </Route>\r\n            <Route path=\"/ifo\">\r\n              <Ifos />\r\n            </Route>\r\n            <Route path=\"/collectibles\">\r\n              <Collectibles />\r\n            </Route>\r\n            <Route exact path=\"/teams\">\r\n              <Teams />\r\n            </Route>\r\n            <Route path=\"/teams/:id\">\r\n              <Team />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/competition\">\r\n              <TradingCompetition />\r\n            </Route>\r\n            <Route path=\"/prediction\">\r\n              <Predictions />\r\n            </Route>\r\n            {/* Redirect */}\r\n            <Route path=\"/staking\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/syrup\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Redirect to=\"/collectibles\" />\r\n            </Route>\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeContextProvider>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeContextProvider>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","export const tokenEarnedPerThousandDollarsCompounding = ({\r\n  numberOfDays,\r\n  farmApr,\r\n  tokenPrice,\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  let aprAsDecimal = farmApr / 100\r\n\r\n  if (performanceFee) {\r\n    // Reduce the APR by the % performance fee\r\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\r\n    const aprAfterFee = farmApr - feeRelativeToApr\r\n    aprAsDecimal = aprAfterFee / 100\r\n  }\r\n\r\n  const daysAsDecimalOfYear = numberOfDays / 365\r\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\r\n  const principal = 1000 / tokenPrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n\r\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n","import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { Profile } from 'state/types'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileContract = getProfileContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      nft = await getNftByTokenId(nftAddress, tokenId)\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n"],"sourceRoot":""}